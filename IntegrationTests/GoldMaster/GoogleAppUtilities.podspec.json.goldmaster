load('@build_bazel_rules_apple//apple:apple.bzl', 'apple_static_framework_import')
load(
  "//Vendor/rules_pods/BazelExtensions:extensions.bzl",
  "acknowledged_target",
  "gen_module_map",
  "gen_includes",
  "headermap"
)
# Add a config setting release for compilation mode
# Assume that people are using `opt` for release mode
# see the bazel user manual for more information
# https://docs.bazel.build/versions/master/be/general.html#config_setting
config_setting(
  name = "release",
  values = {
    "compilation_mode": "opt"
  }
)
config_setting(
  name = "osxCase",
  values = {
    "apple_platform_type": "macos"
  }
)
config_setting(
  name = "tvosCase",
  values = {
    "apple_platform_type": "tvos"
  }
)
config_setting(
  name = "watchosCase",
  values = {
    "apple_platform_type": "watchos"
  }
)
filegroup(
  name = "GoogleAppUtilities_package_hdrs",
  srcs = [
    "GoogleAppUtilities_direct_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "GoogleAppUtilities_direct_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ],
    exclude_directories = 1
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "GoogleAppUtilities_public_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "GoogleAppUtilities_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ],
    exclude_directories = 1
  ),
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "GoogleAppUtilities_hmap",
  namespace = "GoogleAppUtilities",
  hdrs = [
    "GoogleAppUtilities_package_hdrs",
    ":GoogleAppUtilities_hdrs"
  ],
  deps = [
    "//Vendor/GoogleSymbolUtilities:GoogleSymbolUtilities",
    ":GoogleAppUtilities_VendoredFrameworks"
  ],
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "GoogleAppUtilities_includes",
  include = [
    "Vendor/GoogleAppUtilities/pod_support/Headers/Public/"
  ]
)
objc_library(
  name = "GoogleAppUtilities",
  enable_modules = 0,
  hdrs = [
    ":GoogleAppUtilities_hdrs"
  ],
  pch = "pod_support/Headers/Private/GoogleAppUtilities-prefix.pch",
  deps = [
    "//Vendor/GoogleSymbolUtilities:GoogleSymbolUtilities",
    ":GoogleAppUtilities_VendoredFrameworks",
    ":GoogleAppUtilities_includes"
  ],
  copts = select(
    {
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-IVendor/GoogleAppUtilities/pod_support/Headers/Public/GoogleAppUtilities/"
  ] + [
    "-fmodule-name=GoogleAppUtilities"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "GoogleAppUtilities_acknowledgement",
  deps = [
    "//Vendor/GoogleSymbolUtilities:GoogleSymbolUtilities_acknowledgement"
  ],
  value = "//Vendor/GoogleAppUtilities/pod_support_buildable:acknowledgement_fragment"
)
apple_static_framework_import(
  name = "GoogleAppUtilities_VendoredFrameworks",
  framework_imports = glob(
    [
      "Frameworks/frameworks/GoogleAppUtilities.framework/**"
    ],
    exclude_directories = 1
  ),
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "GoogleAppUtilities_VendoredFrameworks_acknowledgement",
  deps = [],
  value = "//Vendor/GoogleAppUtilities/pod_support_buildable:acknowledgement_fragment"
)
