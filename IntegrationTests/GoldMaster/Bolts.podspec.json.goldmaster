load(
  "//Vendor/rules_pods/BazelExtensions:extensions.bzl",
  "acknowledged_target",
  "gen_module_map",
  "gen_includes",
  "headermap",
  "umbrella_header"
)
# Add a config setting release for compilation mode
# Assume that people are using `opt` for release mode
# see the bazel user manual for more information
# https://docs.bazel.build/versions/master/be/general.html#config_setting
config_setting(
  name = "release",
  values = {
    "compilation_mode": "opt"
  }
)
config_setting(
  name = "osxCase",
  values = {
    "apple_platform_type": "macos"
  }
)
config_setting(
  name = "tvosCase",
  values = {
    "apple_platform_type": "tvos"
  }
)
config_setting(
  name = "watchosCase",
  values = {
    "apple_platform_type": "watchos"
  }
)
filegroup(
  name = "Bolts_package_hdrs",
  srcs = [
    "Bolts_direct_hdrs",
    "Tasks_direct_hdrs",
    "AppLinks_direct_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Bolts_direct_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Bolts_public_hdrs",
  srcs = [
    ":AppLinks_public_hdrs",
    ":Tasks_public_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Bolts_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ]
  ) + [
    ":AppLinks_hdrs",
    ":Tasks_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "Bolts_hmap",
  namespace = "Bolts",
  hdrs = [
    "Bolts_package_hdrs",
    ":Bolts_hdrs"
  ],
  deps = [
    ":AppLinks_hmap",
    ":Tasks_hmap"
  ],
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "Bolts_includes",
  include = [
    "Vendor/Bolts/pod_support/Headers/Public/"
  ]
)
objc_library(
  name = "Bolts",
  enable_modules = 0,
  hdrs = [
    ":Bolts_hdrs"
  ],
  pch = "pod_support/Headers/Private/Bolts-prefix.pch",
  deps = [
    ":AppLinks",
    ":Tasks",
    ":Bolts_includes"
  ],
  copts = [
    "-I$(GENDIR)/Vendor/Bolts/",
    "-fobjc-weak"
  ] + select(
    {
      "//conditions:default": [
        "-DDEBUG=1",
        "-DPOD_CONFIGURATION_DEBUG=1"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-IVendor/Bolts/pod_support/Headers/Public/Bolts/"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "Bolts_acknowledgement",
  deps = [],
  value = "//Vendor/Bolts/pod_support_buildable:acknowledgement_fragment"
)
filegroup(
  name = "Tasks_direct_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*",
      "Bolts/Common/*.h"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Tasks_public_hdrs",
  srcs = glob(
    [
      "Bolts/Common/*.h"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Tasks_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*",
      "Bolts/Common/*.h"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Tasks_union_hdrs",
  srcs = [
    "Tasks_hdrs",
    "Bolts_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "Tasks_hmap",
  namespace = "Bolts",
  hdrs = [
    "Bolts_package_hdrs",
    ":Tasks_union_hdrs"
  ],
  deps = [],
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "Tasks_includes",
  include = [
    "Vendor/Bolts/pod_support/Headers/Public/"
  ]
)
objc_library(
  name = "Tasks",
  enable_modules = 0,
  srcs = select(
    {
      "//conditions:default": glob(
        [
          "Bolts/Common/*.m"
        ],
        exclude = [
          "Bolts/iOS/**/*.m"
        ]
      ),
      ":osxCase": glob(
        [
          "Bolts/Common/*.m"
        ]
      ),
      ":tvosCase": glob(
        [
          "Bolts/Common/*.m"
        ]
      ),
      ":watchosCase": glob(
        [
          "Bolts/Common/*.m"
        ]
      )
    }
  ),
  hdrs = [
    ":Tasks_hdrs"
  ],
  pch = "pod_support/Headers/Private/Bolts-prefix.pch",
  deps = [
    ":Tasks_includes"
  ],
  copts = [
    "-I$(GENDIR)/Vendor/Bolts/",
    "-fobjc-weak"
  ] + select(
    {
      "//conditions:default": [
        "-DDEBUG=1",
        "-DPOD_CONFIGURATION_DEBUG=1"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-IVendor/Bolts/pod_support/Headers/Public/Bolts/"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "Tasks_acknowledgement",
  deps = [],
  value = "//Vendor/Bolts/pod_support_buildable:acknowledgement_fragment"
)
filegroup(
  name = "AppLinks_direct_hdrs",
  srcs = select(
    {
      "//conditions:default": glob(
        [
          "pod_support/Headers/Public/**/*",
          "Bolts/iOS/**/*.h",
          "Bolts/iOS/*.h"
        ]
      ),
      ":osxCase": glob(
        [
          "pod_support/Headers/Public/**/*"
        ]
      ),
      ":tvosCase": glob(
        [
          "pod_support/Headers/Public/**/*"
        ]
      ),
      ":watchosCase": glob(
        [
          "pod_support/Headers/Public/**/*"
        ]
      )
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "AppLinks_public_hdrs",
  srcs = select(
    {
      "//conditions:default": glob(
        [
          "Bolts/iOS/*.h"
        ]
      )
    }
  ) + [
    ":Tasks_public_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "AppLinks_hdrs",
  srcs = select(
    {
      "//conditions:default": glob(
        [
          "pod_support/Headers/Public/**/*",
          "Bolts/iOS/**/*.h",
          "Bolts/iOS/*.h"
        ]
      ),
      ":osxCase": glob(
        [
          "pod_support/Headers/Public/**/*"
        ]
      ),
      ":tvosCase": glob(
        [
          "pod_support/Headers/Public/**/*"
        ]
      ),
      ":watchosCase": glob(
        [
          "pod_support/Headers/Public/**/*"
        ]
      )
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "AppLinks_union_hdrs",
  srcs = [
    "AppLinks_hdrs",
    "Bolts_hdrs",
    ":Tasks_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "AppLinks_hmap",
  namespace = "Bolts",
  hdrs = [
    "Bolts_package_hdrs",
    ":AppLinks_union_hdrs"
  ],
  deps = [
    ":Tasks_hmap"
  ],
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "AppLinks_includes",
  include = [
    "Vendor/Bolts/pod_support/Headers/Public/"
  ]
)
objc_library(
  name = "AppLinks",
  enable_modules = 0,
  srcs = select(
    {
      "//conditions:default": glob(
        [
          "Bolts/iOS/**/*.m"
        ]
      )
    }
  ),
  hdrs = [
    ":AppLinks_hdrs"
  ],
  pch = "pod_support/Headers/Private/Bolts-prefix.pch",
  deps = [
    ":Tasks",
    ":AppLinks_includes"
  ],
  copts = [
    "-I$(GENDIR)/Vendor/Bolts/",
    "-fobjc-weak"
  ] + select(
    {
      "//conditions:default": [
        "-DDEBUG=1",
        "-DPOD_CONFIGURATION_DEBUG=1"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-IVendor/Bolts/pod_support/Headers/Public/Bolts/"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "AppLinks_acknowledgement",
  deps = [],
  value = "//Vendor/Bolts/pod_support_buildable:acknowledgement_fragment"
)
