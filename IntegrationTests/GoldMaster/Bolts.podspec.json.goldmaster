load(
  "//Vendor/rules_pods/BazelExtensions:extensions.bzl",
  "pch_with_name_hint",
  "acknowledged_target",
  "gen_module_map",
  "gen_includes",
  "headermap"
)
# Add a config setting release for compilation mode
# Assume that people are using `opt` for release mode
# see the bazel user manual for more information
# https://docs.bazel.build/versions/master/be/general.html#config_setting
config_setting(
  name = "release",
  values = {
    "compilation_mode": "opt"
  }
)
config_setting(
  name = "osxCase",
  values = {
    "apple_platform_type": "macos"
  }
)
config_setting(
  name = "tvosCase",
  values = {
    "apple_platform_type": "tvos"
  }
)
config_setting(
  name = "watchosCase",
  values = {
    "apple_platform_type": "watchos"
  }
)
filegroup(
  name = "Bolts_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ],
    exclude_directories = 1
  ) + [
    ":Tasks_hdrs",
    ":AppLinks_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "Bolts_hmap",
  namespace = "Bolts",
  hdrs = [
    ":Bolts_hdrs"
  ],
  deps = [
    ":AppLinks",
    ":Tasks"
  ],
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "Bolts_includes",
  include = [
    "Vendor/Bolts/pod_support/Headers/Public/"
  ]
)
gen_module_map(
  "Bolts",
  "Bolts_module_map",
  "Bolts",
  [
    "Bolts_hdrs"
  ]
)
objc_library(
  name = "Bolts",
  enable_modules = 0,
  hdrs = [
    ":Bolts_hdrs"
  ],
  pch = pch_with_name_hint(
    "Bolts",
    []
  ),
  deps = [
    ":AppLinks",
    ":Tasks",
    ":Bolts_includes"
  ],
  copts = select(
    {
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-IVendor/Bolts/pod_support/Headers/Public/Bolts/"
  ] + [
    "-fmodule-name=Bolts_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "Bolts_acknowledgement",
  deps = [],
  value = "//Vendor/Bolts/pod_support_buildable:acknowledgement_fragment"
)
filegroup(
  name = "Tasks_hdrs",
  srcs = glob(
    [
      "Bolts/Common/*.h"
    ],
    exclude_directories = 1
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Tasks_union_hdrs",
  srcs = [
    "Tasks_hdrs",
    "Bolts_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "Tasks_hmap",
  namespace = "Bolts",
  hdrs = [
    ":Tasks_union_hdrs"
  ],
  deps = [],
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "Tasks_includes",
  include = [
    "Vendor/Bolts/pod_support/Headers/Public/"
  ]
)
objc_library(
  name = "Tasks",
  enable_modules = 0,
  srcs = select(
    {
      "//conditions:default": glob(
        [
          "Bolts/Common/*.m"
        ],
        exclude = glob(
          [
            "Bolts/iOS/**/*.m"
          ],
          exclude_directories = 1
        ),
        exclude_directories = 1
      ),
      ":osxCase": glob(
        [
          "Bolts/Common/*.m"
        ],
        exclude_directories = 1
      ),
      ":tvosCase": glob(
        [
          "Bolts/Common/*.m"
        ],
        exclude_directories = 1
      ),
      ":watchosCase": glob(
        [
          "Bolts/Common/*.m"
        ],
        exclude_directories = 1
      )
    }
  ),
  hdrs = [
    ":Tasks_union_hdrs"
  ],
  pch = pch_with_name_hint(
    "Bolts",
    glob(
      [
        "Bolts/**/*.pch"
      ],
      exclude_directories = 1
    )
  ),
  deps = [
    ":Tasks_includes"
  ],
  copts = select(
    {
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-IVendor/Bolts/pod_support/Headers/Public/Bolts/"
  ] + [
    "-fmodule-name=Bolts_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "Tasks_acknowledgement",
  deps = [],
  value = "//Vendor/Bolts/pod_support_buildable:acknowledgement_fragment"
)
filegroup(
  name = "AppLinks_hdrs",
  srcs = select(
    {
      "//conditions:default": glob(
        [
          "Bolts/iOS/**/*.h"
        ],
        exclude_directories = 1
      )
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "AppLinks_union_hdrs",
  srcs = [
    "AppLinks_hdrs",
    "Bolts_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "AppLinks_hmap",
  namespace = "Bolts",
  hdrs = [
    ":AppLinks_union_hdrs"
  ],
  deps = [
    ":Tasks"
  ],
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "AppLinks_includes",
  include = [
    "Vendor/Bolts/pod_support/Headers/Public/"
  ]
)
objc_library(
  name = "AppLinks",
  enable_modules = 0,
  srcs = select(
    {
      "//conditions:default": glob(
        [
          "Bolts/iOS/**/*.m"
        ],
        exclude_directories = 1
      )
    }
  ),
  hdrs = [
    ":AppLinks_union_hdrs"
  ],
  pch = select(
    {
      "//conditions:default": pch_with_name_hint(
        "Bolts",
        glob(
          [
            "Bolts/**/*.pch"
          ],
          exclude_directories = 1
        )
      ),
      ":osxCase": pch_with_name_hint(
        "Bolts",
        []
      ),
      ":tvosCase": pch_with_name_hint(
        "Bolts",
        []
      ),
      ":watchosCase": pch_with_name_hint(
        "Bolts",
        []
      )
    }
  ),
  deps = [
    ":Tasks",
    ":AppLinks_includes"
  ],
  copts = select(
    {
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-IVendor/Bolts/pod_support/Headers/Public/Bolts/"
  ] + [
    "-fmodule-name=Bolts_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "AppLinks_acknowledgement",
  deps = [],
  value = "//Vendor/Bolts/pod_support_buildable:acknowledgement_fragment"
)
