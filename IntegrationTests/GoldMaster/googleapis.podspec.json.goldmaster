load('//Vendor/rules_pods/BazelExtensions:extensions.bzl', 'pch_with_name_hint')
load('//Vendor/rules_pods/BazelExtensions:extensions.bzl', 'acknowledged_target')
load('//Vendor/rules_pods/BazelExtensions:extensions.bzl', 'gen_module_map')
# Add a config setting release for compilation mode
# Assume that people are using `opt` for release mode
# see the bazel user manual for more information
# https://bazel.build/versions/master/docs/bazel-user-manual.html
native.config_setting(
  name = "release",
  values = {
    "compilation_mode": "opt"
  }
  )
filegroup(
  name = "googleapis_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ],
    exclude_directories = 1
    ),
  visibility = [
    "//visibility:public"
  ]
  )
gen_module_map(
  "googleapis",
  "googleapis_module_map",
  "googleapis",
  [
    "googleapis_hdrs"
  ]
  )
objc_library(
  name = "googleapis",
  enable_modules = 0,
  hdrs = [
    ":googleapis_hdrs"
  ],
  pch = pch_with_name_hint(
    "googleapis",
    [

    ]
    ),
  includes = [
    "pod_support/Headers/Public/",
    "googleapis_module_map"
  ],
  deps = [
    ":Messages",
    ":Services",
    "//Vendor/!ProtoCompiler-gRPCPlugin:!ProtoCompiler-gRPCPlugin"
  ],
  copts = [
    "-DGPB_USE_PROTOBUF_FRAMEWORK_IMPORTS=1"
  ] + select(
    {
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ],
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ]
    }
    ) + [
    "-IVendor/googleapis/pod_support/Headers/Public/googleapis/"
  ] + [
    "-fmodule-name=googleapis_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
  )
acknowledged_target(
  name = "googleapis_acknowledgement",
  deps = [
    "//Vendor/!ProtoCompiler-gRPCPlugin:!ProtoCompiler-gRPCPlugin_acknowledgement"
  ],
  value = "//Vendor/googleapis/pod_support_buildable:acknowledgement_fragment"
  )
filegroup(
  name = "Messages_hdrs",
  srcs = glob(
    [
      "google/**/*.pbobjc.h"
    ],
    exclude_directories = 1
    ),
  visibility = [
    "//visibility:public"
  ]
  )
objc_library(
  name = "Messages",
  enable_modules = 0,
  non_arc_srcs = glob(
    [
      "google/**/*.pbobjc.m"
    ],
    exclude = [
      "google/**/*.pbrpc.m"
    ],
    exclude_directories = 1
    ),
  hdrs = [
    ":googleapis_hdrs"
  ],
  pch = pch_with_name_hint(
    "googleapis",
    [
      "google/**/*.pch"
    ]
    ),
  includes = [
    "pod_support/Headers/Public/",
    "googleapis_module_map"
  ],
  deps = [
    "//Vendor/Protobuf:Protobuf"
  ],
  copts = [
    "-DGPB_USE_PROTOBUF_FRAMEWORK_IMPORTS=1"
  ] + select(
    {
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ],
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ]
    }
    ) + [
    "-IVendor/googleapis/pod_support/Headers/Public/googleapis/"
  ] + [
    "-fmodule-name=googleapis_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
  )
acknowledged_target(
  name = "Messages_acknowledgement",
  deps = [
    "//Vendor/Protobuf:Protobuf_acknowledgement"
  ],
  value = "//Vendor/googleapis/pod_support_buildable:acknowledgement_fragment"
  )
filegroup(
  name = "Services_hdrs",
  srcs = glob(
    [
      "google/**/*.pbrpc.h"
    ],
    exclude_directories = 1
    ),
  visibility = [
    "//visibility:public"
  ]
  )
objc_library(
  name = "Services",
  enable_modules = 0,
  srcs = glob(
    [
      "google/**/*.pbrpc.m"
    ],
    exclude_directories = 1
    ) + glob(
    [
      "google/**/*.pbrpc.h"
    ],
    exclude_directories = 1
    ),
  hdrs = [
    ":googleapis_hdrs"
  ],
  pch = pch_with_name_hint(
    "googleapis",
    [
      "google/**/*.pch"
    ]
    ),
  includes = [
    "pod_support/Headers/Public/",
    "googleapis_module_map"
  ],
  deps = [
    ":Messages",
    "//Vendor/gRPC-ProtoRPC:gRPC-ProtoRPC"
  ],
  copts = [
    "-DGPB_USE_PROTOBUF_FRAMEWORK_IMPORTS=1"
  ] + select(
    {
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ],
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ]
    }
    ) + [
    "-IVendor/googleapis/pod_support/Headers/Public/googleapis/"
  ] + [
    "-fmodule-name=googleapis_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
  )
acknowledged_target(
  name = "Services_acknowledgement",
  deps = [
    "//Vendor/gRPC-ProtoRPC:gRPC-ProtoRPC_acknowledgement"
  ],
  value = "//Vendor/googleapis/pod_support_buildable:acknowledgement_fragment"
  )
