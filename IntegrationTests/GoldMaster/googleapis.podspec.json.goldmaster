load(
  "//Vendor/rules_pods/BazelExtensions:extensions.bzl",
  "acknowledged_target",
  "gen_module_map",
  "gen_includes",
  "headermap"
)
# Add a config setting release for compilation mode
# Assume that people are using `opt` for release mode
# see the bazel user manual for more information
# https://docs.bazel.build/versions/master/be/general.html#config_setting
config_setting(
  name = "release",
  values = {
    "compilation_mode": "opt"
  }
)
config_setting(
  name = "osxCase",
  values = {
    "apple_platform_type": "macos"
  }
)
config_setting(
  name = "tvosCase",
  values = {
    "apple_platform_type": "tvos"
  }
)
config_setting(
  name = "watchosCase",
  values = {
    "apple_platform_type": "watchos"
  }
)
filegroup(
  name = "googleapis_package_hdrs",
  srcs = [
    "googleapis_direct_hdrs",
    "Messages_direct_hdrs",
    "Services_direct_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "googleapis_direct_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ],
    exclude_directories = 1
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "googleapis_public_hdrs",
  srcs = [
    ":Messages_public_hdrs",
    ":Services_public_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "googleapis_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ],
    exclude_directories = 1
  ) + [
    ":Messages_hdrs",
    ":Services_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "googleapis_hmap",
  namespace = "googleapis",
  hdrs = [
    "googleapis_package_hdrs",
    ":googleapis_hdrs"
  ],
  deps = [
    "//Vendor/!ProtoCompiler-gRPCPlugin:!ProtoCompiler-gRPCPlugin",
    ":Messages_hmap",
    ":Services_hmap"
  ],
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "googleapis_includes",
  include = [
    "Vendor/googleapis/pod_support/Headers/Public/"
  ]
)
objc_library(
  name = "googleapis",
  enable_modules = 0,
  hdrs = [
    ":googleapis_hdrs"
  ],
  pch = "pod_support/Headers/Private/googleapis-prefix.pch",
  deps = [
    "//Vendor/!ProtoCompiler-gRPCPlugin:!ProtoCompiler-gRPCPlugin",
    ":Messages",
    ":Services",
    ":googleapis_includes"
  ],
  copts = [
    "-DGPB_USE_PROTOBUF_FRAMEWORK_IMPORTS=1"
  ] + select(
    {
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-IVendor/googleapis/pod_support/Headers/Public/googleapis/"
  ] + [
    "-fmodule-name=googleapis"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "googleapis_acknowledgement",
  deps = [
    "//Vendor/!ProtoCompiler-gRPCPlugin:!ProtoCompiler-gRPCPlugin_acknowledgement"
  ],
  value = "//Vendor/googleapis/pod_support_buildable:acknowledgement_fragment"
)
filegroup(
  name = "Messages_direct_hdrs",
  srcs = glob(
    glob(
      [
        "pod_support/Headers/Public/**/*"
      ],
      exclude_directories = 1
    ) + glob(
      [
        "google/**/*.pbobjc.h"
      ],
      exclude_directories = 1
    ),
    exclude_directories = 1
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Messages_public_hdrs",
  srcs = glob(
    [
      "google/**/*.pbobjc.h"
    ],
    exclude_directories = 1
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Messages_hdrs",
  srcs = glob(
    glob(
      [
        "pod_support/Headers/Public/**/*"
      ],
      exclude_directories = 1
    ) + glob(
      [
        "google/**/*.pbobjc.h"
      ],
      exclude_directories = 1
    ),
    exclude_directories = 1
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Messages_union_hdrs",
  srcs = [
    "Messages_hdrs",
    "googleapis_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "Messages_hmap",
  namespace = "googleapis",
  hdrs = [
    "googleapis_package_hdrs",
    ":Messages_union_hdrs"
  ],
  deps = [
    "//Vendor/Protobuf:Protobuf"
  ],
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "Messages_includes",
  include = [
    "Vendor/googleapis/pod_support/Headers/Public/"
  ]
)
objc_library(
  name = "Messages",
  enable_modules = 0,
  non_arc_srcs = glob(
    [
      "google/**/*.pbobjc.m"
    ],
    exclude = glob(
      [
        "google/**/*.pbrpc.m"
      ],
      exclude_directories = 1
    ),
    exclude_directories = 1
  ),
  hdrs = [
    ":Messages_hdrs"
  ],
  pch = "pod_support/Headers/Private/googleapis-prefix.pch",
  deps = [
    "//Vendor/Protobuf:Protobuf",
    ":Messages_includes"
  ],
  copts = [
    "-DGPB_USE_PROTOBUF_FRAMEWORK_IMPORTS=1"
  ] + select(
    {
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-IVendor/googleapis/pod_support/Headers/Public/googleapis/"
  ] + [
    "-fmodule-name=googleapis"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "Messages_acknowledgement",
  deps = [
    "//Vendor/Protobuf:Protobuf_acknowledgement"
  ],
  value = "//Vendor/googleapis/pod_support_buildable:acknowledgement_fragment"
)
filegroup(
  name = "Services_direct_hdrs",
  srcs = glob(
    glob(
      [
        "pod_support/Headers/Public/**/*"
      ],
      exclude_directories = 1
    ) + glob(
      [
        "google/**/*.pbrpc.h"
      ],
      exclude_directories = 1
    ),
    exclude_directories = 1
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Services_public_hdrs",
  srcs = glob(
    [
      "google/**/*.pbrpc.h"
    ],
    exclude_directories = 1
  ) + [
    ":Messages_public_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Services_hdrs",
  srcs = glob(
    glob(
      [
        "pod_support/Headers/Public/**/*"
      ],
      exclude_directories = 1
    ) + glob(
      [
        "google/**/*.pbrpc.h"
      ],
      exclude_directories = 1
    ),
    exclude_directories = 1
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Services_union_hdrs",
  srcs = [
    "Services_hdrs",
    "googleapis_hdrs",
    ":Messages_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "Services_hmap",
  namespace = "googleapis",
  hdrs = [
    "googleapis_package_hdrs",
    ":Services_union_hdrs"
  ],
  deps = [
    "//Vendor/gRPC-ProtoRPC:gRPC-ProtoRPC",
    ":Messages_hmap"
  ],
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "Services_includes",
  include = [
    "Vendor/googleapis/pod_support/Headers/Public/"
  ]
)
objc_library(
  name = "Services",
  enable_modules = 0,
  srcs = glob(
    [
      "google/**/*.pbrpc.m"
    ],
    exclude_directories = 1
  ),
  hdrs = [
    ":Services_hdrs"
  ],
  pch = "pod_support/Headers/Private/googleapis-prefix.pch",
  deps = [
    "//Vendor/gRPC-ProtoRPC:gRPC-ProtoRPC",
    ":Messages",
    ":Services_includes"
  ],
  copts = [
    "-DGPB_USE_PROTOBUF_FRAMEWORK_IMPORTS=1"
  ] + select(
    {
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-IVendor/googleapis/pod_support/Headers/Public/googleapis/"
  ] + [
    "-fmodule-name=googleapis"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "Services_acknowledgement",
  deps = [
    "//Vendor/gRPC-ProtoRPC:gRPC-ProtoRPC_acknowledgement"
  ],
  value = "//Vendor/googleapis/pod_support_buildable:acknowledgement_fragment"
)
