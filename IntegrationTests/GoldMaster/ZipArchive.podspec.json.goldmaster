load(
  "//Vendor/rules_pods/BazelExtensions:extensions.bzl",
  "acknowledged_target",
  "gen_module_map",
  "gen_includes",
  "headermap"
)
# Add a config setting release for compilation mode
# Assume that people are using `opt` for release mode
# see the bazel user manual for more information
# https://docs.bazel.build/versions/master/be/general.html#config_setting
config_setting(
  name = "release",
  values = {
    "compilation_mode": "opt"
  }
)
config_setting(
  name = "osxCase",
  values = {
    "apple_platform_type": "macos"
  }
)
config_setting(
  name = "tvosCase",
  values = {
    "apple_platform_type": "tvos"
  }
)
config_setting(
  name = "watchosCase",
  values = {
    "apple_platform_type": "watchos"
  }
)
filegroup(
  name = "ZipArchive_package_hdrs",
  srcs = [
    "ZipArchive_direct_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "ZipArchive_direct_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*",
      "*.h",
      "minizip/crypt.h",
      "minizip/ioapi.h",
      "minizip/mztools.h",
      "minizip/unzip.h",
      "minizip/zip.h"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "ZipArchive_public_hdrs",
  srcs = glob(
    [
      "*.h"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "ZipArchive_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*",
      "*.h",
      "minizip/crypt.h",
      "minizip/ioapi.h",
      "minizip/mztools.h",
      "minizip/unzip.h",
      "minizip/zip.h"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "ZipArchive_hmap",
  namespace = "ZipArchive",
  hdrs = [
    "ZipArchive_package_hdrs",
    ":ZipArchive_hdrs"
  ],
  deps = [],
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "ZipArchive_includes",
  include = [
    "Vendor/ZipArchive/pod_support/Headers/Public/"
  ]
)
objc_library(
  name = "ZipArchive",
  enable_modules = 0,
  non_arc_srcs = glob(
    [
      "*.m",
      "minizip/crypt.c",
      "minizip/ioapi.c",
      "minizip/mztools.c",
      "minizip/unzip.c",
      "minizip/zip.c"
    ]
  ),
  hdrs = [
    ":ZipArchive_hdrs"
  ],
  pch = "pod_support/Headers/Private/ZipArchive-prefix.pch",
  sdk_dylibs = [
    "z"
  ],
  deps = [
    ":ZipArchive_includes"
  ],
  copts = [
    "-Dunix"
  ] + select(
    {
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-IVendor/ZipArchive/pod_support/Headers/Public/ZipArchive/"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "ZipArchive_acknowledgement",
  deps = [],
  value = "//Vendor/ZipArchive/pod_support_buildable:acknowledgement_fragment"
)
