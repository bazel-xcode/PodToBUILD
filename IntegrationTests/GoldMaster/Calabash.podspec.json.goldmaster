load(
  "//Vendor/rules_pods/BazelExtensions:extensions.bzl",
  "acknowledged_target",
  "gen_module_map",
  "gen_includes",
  "headermap",
  "umbrella_header"
)
# Add a config setting release for compilation mode
# Assume that people are using `opt` for release mode
# see the bazel user manual for more information
# https://docs.bazel.build/versions/master/be/general.html#config_setting
config_setting(
  name = "release",
  values = {
    "compilation_mode": "opt"
  }
)
config_setting(
  name = "osxCase",
  values = {
    "apple_platform_type": "macos"
  }
)
config_setting(
  name = "tvosCase",
  values = {
    "apple_platform_type": "tvos"
  }
)
config_setting(
  name = "watchosCase",
  values = {
    "apple_platform_type": "watchos"
  }
)
filegroup(
  name = "Calabash_package_hdrs",
  srcs = [
    "Calabash_cxx_direct_hdrs",
    "Calabash_direct_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Calabash_cxx_direct_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*",
      "calabash.framework/Versions/A/Headers/*.h",
      "calabash.framework/Versions/A/Headers/*.hpp",
      "calabash.framework/Versions/A/Headers/*.hxx"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Calabash_cxx_public_hdrs",
  srcs = glob(
    [
      "calabash.framework/Versions/A/Headers/*.h",
      "calabash.framework/Versions/A/Headers/*.hpp",
      "calabash.framework/Versions/A/Headers/*.hxx"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Calabash_cxx_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*",
      "calabash.framework/Versions/A/Headers/*.h",
      "calabash.framework/Versions/A/Headers/*.hpp",
      "calabash.framework/Versions/A/Headers/*.hxx"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Calabash_cxx_union_hdrs",
  srcs = [
    "Calabash_cxx_hdrs",
    "Calabash_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "Calabash_cxx_hmap",
  namespace = "Calabash",
  hdrs = [
    "Calabash_package_hdrs",
    ":Calabash_cxx_union_hdrs"
  ],
  deps = [],
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "Calabash_cxx_includes",
  include = [
    "Vendor/Calabash/pod_support/Headers/Public/"
  ]
)
objc_library(
  name = "Calabash_cxx",
  enable_modules = 0,
  srcs = glob(
    [
      "calabash.framework/Versions/A/Headers/*.cc",
      "calabash.framework/Versions/A/Headers/*.cpp",
      "calabash.framework/Versions/A/Headers/*.cxx"
    ],
    exclude = [
      "calabash.framework/Versions/A/Headers/*.S",
      "calabash.framework/Versions/A/Headers/*.c",
      "calabash.framework/Versions/A/Headers/*.m",
      "calabash.framework/Versions/A/Headers/*.s"
    ]
  ),
  non_arc_srcs = glob(
    glob(
      [
        "calabash.framework/Versions/A/Headers/*.mm"
      ],
      exclude = [
        "calabash.framework/Versions/A/Headers/*.S",
        "calabash.framework/Versions/A/Headers/*.c",
        "calabash.framework/Versions/A/Headers/*.m",
        "calabash.framework/Versions/A/Headers/*.s"
      ]
    ),
    exclude = glob(
      [
        "calabash.framework/Versions/A/Headers/*.cc",
        "calabash.framework/Versions/A/Headers/*.cpp",
        "calabash.framework/Versions/A/Headers/*.cxx"
      ],
      exclude = [
        "calabash.framework/Versions/A/Headers/*.S",
        "calabash.framework/Versions/A/Headers/*.c",
        "calabash.framework/Versions/A/Headers/*.m",
        "calabash.framework/Versions/A/Headers/*.s"
      ]
    )
  ),
  hdrs = [
    ":Calabash_cxx_hdrs"
  ],
  pch = "pod_support/Headers/Private/Calabash-prefix.pch",
  sdk_frameworks = select(
    {
      "//conditions:default": [
        "CFNetwork"
      ]
    }
  ),
  deps = [
    ":Calabash_cxx_includes"
  ],
  copts = [
    "-std=c++14",
    "-ObjC",
    "-force_load",
    ""Vendor/Calabash/calabash.framework/calabash""
  ] + select(
    {
      "//conditions:default": [
        "-DDEBUG=1",
        "-DPOD_CONFIGURATION_DEBUG=1"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-IVendor/Calabash/pod_support/Headers/Public/Calabash/"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "Calabash_cxx_acknowledgement",
  deps = [],
  value = "//Vendor/Calabash/pod_support_buildable:acknowledgement_fragment"
)
filegroup(
  name = "Calabash_direct_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*",
      "calabash.framework/Versions/A/Headers/*.h",
      "calabash.framework/Versions/A/Headers/*.hpp",
      "calabash.framework/Versions/A/Headers/*.hxx"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Calabash_public_hdrs",
  srcs = glob(
    [
      "calabash.framework/Versions/A/Headers/*.h",
      "calabash.framework/Versions/A/Headers/*.hpp",
      "calabash.framework/Versions/A/Headers/*.hxx"
    ]
  ) + [
    ":Calabash_cxx_public_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Calabash_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*",
      "calabash.framework/Versions/A/Headers/*.h",
      "calabash.framework/Versions/A/Headers/*.hpp",
      "calabash.framework/Versions/A/Headers/*.hxx"
    ]
  ) + [
    ":Calabash_cxx_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "Calabash_hmap",
  namespace = "Calabash",
  hdrs = [
    "Calabash_package_hdrs",
    ":Calabash_hdrs"
  ],
  deps = [
    ":Calabash_cxx_hmap"
  ],
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "Calabash_includes",
  include = [
    "Vendor/Calabash/pod_support/Headers/Public/"
  ]
)
objc_library(
  name = "Calabash",
  enable_modules = 0,
  non_arc_srcs = glob(
    [
      "calabash.framework/Versions/A/Headers/*.S",
      "calabash.framework/Versions/A/Headers/*.c",
      "calabash.framework/Versions/A/Headers/*.m",
      "calabash.framework/Versions/A/Headers/*.s"
    ]
  ),
  hdrs = [
    ":Calabash_hdrs"
  ],
  pch = "pod_support/Headers/Private/Calabash-prefix.pch",
  sdk_frameworks = select(
    {
      "//conditions:default": [
        "CFNetwork"
      ]
    }
  ),
  deps = [
    ":Calabash_cxx",
    ":Calabash_includes"
  ],
  copts = [
    "-fobjc-weak",
    "-ObjC",
    "-force_load",
    ""Vendor/Calabash/calabash.framework/calabash""
  ] + select(
    {
      "//conditions:default": [
        "-DDEBUG=1",
        "-DPOD_CONFIGURATION_DEBUG=1"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-IVendor/Calabash/pod_support/Headers/Public/Calabash/"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "Calabash_acknowledgement",
  deps = [],
  value = "//Vendor/Calabash/pod_support_buildable:acknowledgement_fragment"
)
