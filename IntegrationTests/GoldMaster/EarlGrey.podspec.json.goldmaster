load('@build_bazel_rules_apple//apple:apple.bzl', 'apple_static_framework_import')
load(
  "//Vendor/rules_pods/BazelExtensions:extensions.bzl",
  "pch_with_name_hint",
  "acknowledged_target",
  "gen_module_map",
  "gen_includes",
  "headermap"
)
# Add a config setting release for compilation mode
# Assume that people are using `opt` for release mode
# see the bazel user manual for more information
# https://docs.bazel.build/versions/master/be/general.html#config_setting
config_setting(
  name = "release",
  values = {
    "compilation_mode": "opt"
  }
)
config_setting(
  name = "osxCase",
  values = {
    "apple_platform_type": "macos"
  }
)
config_setting(
  name = "tvosCase",
  values = {
    "apple_platform_type": "tvos"
  }
)
config_setting(
  name = "watchosCase",
  values = {
    "apple_platform_type": "watchos"
  }
)
filegroup(
  name = "EarlGrey_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ],
    exclude_directories = 1
  ),
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "EarlGrey_hmap",
  namespace = "EarlGrey",
  hdrs = [
    ":EarlGrey_hdrs"
  ],
  deps = [
    ":EarlGrey_VendoredFrameworks"
  ],
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "EarlGrey_includes",
  include = [
    "Vendor/EarlGrey/pod_support/Headers/Public/"
  ]
)
gen_module_map(
  "EarlGrey",
  "EarlGrey_module_map",
  "EarlGrey",
  [
    "EarlGrey_hdrs"
  ]
)
objc_library(
  name = "EarlGrey",
  enable_modules = 0,
  hdrs = [
    ":EarlGrey_hdrs"
  ],
  pch = pch_with_name_hint(
    "EarlGrey",
    []
  ),
  sdk_frameworks = [
    "CoreData",
    "CoreFoundation",
    "CoreGraphics",
    "Foundation",
    "IOKit",
    "QuartzCore",
    "UIKit",
    "XCTest"
  ],
  deps = [
    ":EarlGrey_VendoredFrameworks",
    ":EarlGrey_includes"
  ],
  copts = [
    "-fobjc-arc-exceptions"
  ] + select(
    {
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-IVendor/EarlGrey/pod_support/Headers/Public/EarlGrey/"
  ] + [
    "-fmodule-name=EarlGrey_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "EarlGrey_acknowledgement",
  deps = [],
  value = "//Vendor/EarlGrey/pod_support_buildable:acknowledgement_fragment"
)
apple_static_framework_import(
  name = "EarlGrey_VendoredFrameworks",
  framework_imports = select(
    {
      "//conditions:default": glob(
        [
          "EarlGrey/EarlGrey.framework/**"
        ],
        exclude_directories = 1
      )
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "EarlGrey_VendoredFrameworks_acknowledgement",
  deps = [],
  value = "//Vendor/EarlGrey/pod_support_buildable:acknowledgement_fragment"
)
