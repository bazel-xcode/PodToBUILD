load('@build_bazel_rules_apple//apple:resources.bzl', 'apple_bundle_import')
load(
  "//Vendor/rules_pods/BazelExtensions:extensions.bzl",
  "acknowledged_target",
  "gen_module_map",
  "gen_includes",
  "headermap",
  "umbrella_header"
)
# Add a config setting release for compilation mode
# Assume that people are using `opt` for release mode
# see the bazel user manual for more information
# https://docs.bazel.build/versions/master/be/general.html#config_setting
config_setting(
  name = "release",
  values = {
    "compilation_mode": "opt"
  }
)
config_setting(
  name = "osxCase",
  values = {
    "apple_platform_type": "macos"
  }
)
config_setting(
  name = "tvosCase",
  values = {
    "apple_platform_type": "tvos"
  }
)
config_setting(
  name = "watchosCase",
  values = {
    "apple_platform_type": "watchos"
  }
)
filegroup(
  name = "youtube-ios-player-helper_package_hdrs",
  srcs = [
    "youtube-ios-player-helper_cxx_direct_hdrs",
    "youtube-ios-player-helper_direct_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "youtube-ios-player-helper_cxx_direct_hdrs",
  srcs = select(
    {
      "//conditions:default": glob(
        [
          "pod_support/Headers/Public/**/*"
        ] + glob(
          [
            "Classes/**/*.h",
            "Classes/**/*.hpp",
            "Classes/**/*.hxx"
          ],
          exclude = [
            "Classes/osx/**/*.h",
            "Classes/osx/**/*.hpp",
            "Classes/osx/**/*.hxx"
          ]
        )
      ),
      ":osxCase": glob(
        [
          "pod_support/Headers/Public/**/*"
        ] + glob(
          [
            "Classes/**/*.h",
            "Classes/**/*.hpp",
            "Classes/**/*.hxx"
          ],
          exclude = [
            "Classes/ios/**/*.h",
            "Classes/ios/**/*.hpp",
            "Classes/ios/**/*.hxx"
          ]
        )
      ),
      ":tvosCase": glob(
        [
          "pod_support/Headers/Public/**/*",
          "Classes/**/*.h",
          "Classes/**/*.hpp",
          "Classes/**/*.hxx"
        ]
      ),
      ":watchosCase": glob(
        [
          "pod_support/Headers/Public/**/*",
          "Classes/**/*.h",
          "Classes/**/*.hpp",
          "Classes/**/*.hxx"
        ]
      )
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "youtube-ios-player-helper_cxx_public_hdrs",
  srcs = glob(
    [
      "Classes/**/*.h",
      "Classes/**/*.hpp",
      "Classes/**/*.hxx"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "youtube-ios-player-helper_cxx_hdrs",
  srcs = select(
    {
      "//conditions:default": glob(
        [
          "pod_support/Headers/Public/**/*"
        ] + glob(
          [
            "Classes/**/*.h",
            "Classes/**/*.hpp",
            "Classes/**/*.hxx"
          ],
          exclude = [
            "Classes/osx/**/*.h",
            "Classes/osx/**/*.hpp",
            "Classes/osx/**/*.hxx"
          ]
        )
      ),
      ":osxCase": glob(
        [
          "pod_support/Headers/Public/**/*"
        ] + glob(
          [
            "Classes/**/*.h",
            "Classes/**/*.hpp",
            "Classes/**/*.hxx"
          ],
          exclude = [
            "Classes/ios/**/*.h",
            "Classes/ios/**/*.hpp",
            "Classes/ios/**/*.hxx"
          ]
        )
      ),
      ":tvosCase": glob(
        [
          "pod_support/Headers/Public/**/*",
          "Classes/**/*.h",
          "Classes/**/*.hpp",
          "Classes/**/*.hxx"
        ]
      ),
      ":watchosCase": glob(
        [
          "pod_support/Headers/Public/**/*",
          "Classes/**/*.h",
          "Classes/**/*.hpp",
          "Classes/**/*.hxx"
        ]
      )
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "youtube-ios-player-helper_cxx_union_hdrs",
  srcs = [
    "youtube-ios-player-helper_cxx_hdrs",
    "youtube-ios-player-helper_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "youtube-ios-player-helper_cxx_hmap",
  namespace = "youtube-ios-player-helper",
  hdrs = [
    "youtube-ios-player-helper_package_hdrs",
    ":youtube-ios-player-helper_cxx_union_hdrs"
  ],
  deps = [],
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "youtube-ios-player-helper_cxx_includes",
  include = [
    "Vendor/youtube-ios-player-helper/pod_support/Headers/Public/"
  ]
)
objc_library(
  name = "youtube-ios-player-helper_cxx",
  enable_modules = 0,
  srcs = select(
    {
      "//conditions:default": glob(
        [
          "Classes/**/*.cc",
          "Classes/**/*.cpp",
          "Classes/**/*.cxx",
          "Classes/**/*.mm"
        ],
        exclude = [
          "Classes/osx/**/*.S",
          "Classes/osx/**/*.c",
          "Classes/osx/**/*.cc",
          "Classes/osx/**/*.cpp",
          "Classes/osx/**/*.cxx",
          "Classes/osx/**/*.m",
          "Classes/osx/**/*.mm",
          "Classes/osx/**/*.s"
        ] + glob(
          [
            "Classes/**/*.S",
            "Classes/**/*.c",
            "Classes/**/*.m",
            "Classes/**/*.s"
          ],
          exclude = [
            "Classes/osx/**/*.S",
            "Classes/osx/**/*.c",
            "Classes/osx/**/*.cc",
            "Classes/osx/**/*.cpp",
            "Classes/osx/**/*.cxx",
            "Classes/osx/**/*.m",
            "Classes/osx/**/*.mm",
            "Classes/osx/**/*.s"
          ]
        )
      ),
      ":osxCase": glob(
        [
          "Classes/**/*.cc",
          "Classes/**/*.cpp",
          "Classes/**/*.cxx",
          "Classes/**/*.mm"
        ],
        exclude = [
          "Classes/ios/**/*.S",
          "Classes/ios/**/*.c",
          "Classes/ios/**/*.cc",
          "Classes/ios/**/*.cpp",
          "Classes/ios/**/*.cxx",
          "Classes/ios/**/*.m",
          "Classes/ios/**/*.mm",
          "Classes/ios/**/*.s"
        ] + glob(
          [
            "Classes/**/*.S",
            "Classes/**/*.c",
            "Classes/**/*.m",
            "Classes/**/*.s"
          ],
          exclude = [
            "Classes/ios/**/*.S",
            "Classes/ios/**/*.c",
            "Classes/ios/**/*.cc",
            "Classes/ios/**/*.cpp",
            "Classes/ios/**/*.cxx",
            "Classes/ios/**/*.m",
            "Classes/ios/**/*.mm",
            "Classes/ios/**/*.s"
          ]
        )
      ),
      ":tvosCase": glob(
        [
          "Classes/**/*.cc",
          "Classes/**/*.cpp",
          "Classes/**/*.cxx",
          "Classes/**/*.mm"
        ],
        exclude = [
          "Classes/**/*.S",
          "Classes/**/*.c",
          "Classes/**/*.m",
          "Classes/**/*.s"
        ]
      ),
      ":watchosCase": glob(
        [
          "Classes/**/*.cc",
          "Classes/**/*.cpp",
          "Classes/**/*.cxx",
          "Classes/**/*.mm"
        ],
        exclude = [
          "Classes/**/*.S",
          "Classes/**/*.c",
          "Classes/**/*.m",
          "Classes/**/*.s"
        ]
      )
    }
  ),
  hdrs = [
    ":youtube-ios-player-helper_cxx_hdrs"
  ],
  pch = "pod_support/Headers/Private/youtube-ios-player-helper-prefix.pch",
  deps = [
    ":youtube-ios-player-helper_cxx_includes"
  ],
  copts = [
    "-std=c++14"
  ] + select(
    {
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-IVendor/youtube-ios-player-helper/pod_support/Headers/Public/youtube-ios-player-helper/"
  ],
  data = [
    ":youtube-ios-player-helper_Bundle_Assets"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "youtube-ios-player-helper_cxx_acknowledgement",
  deps = [],
  value = "//Vendor/youtube-ios-player-helper/pod_support_buildable:acknowledgement_fragment"
)
filegroup(
  name = "youtube-ios-player-helper_direct_hdrs",
  srcs = select(
    {
      "//conditions:default": glob(
        [
          "pod_support/Headers/Public/**/*"
        ] + glob(
          [
            "Classes/**/*.h",
            "Classes/**/*.hpp",
            "Classes/**/*.hxx"
          ],
          exclude = [
            "Classes/osx/**/*.h",
            "Classes/osx/**/*.hpp",
            "Classes/osx/**/*.hxx"
          ]
        )
      ),
      ":osxCase": glob(
        [
          "pod_support/Headers/Public/**/*"
        ] + glob(
          [
            "Classes/**/*.h",
            "Classes/**/*.hpp",
            "Classes/**/*.hxx"
          ],
          exclude = [
            "Classes/ios/**/*.h",
            "Classes/ios/**/*.hpp",
            "Classes/ios/**/*.hxx"
          ]
        )
      ),
      ":tvosCase": glob(
        [
          "pod_support/Headers/Public/**/*",
          "Classes/**/*.h",
          "Classes/**/*.hpp",
          "Classes/**/*.hxx"
        ]
      ),
      ":watchosCase": glob(
        [
          "pod_support/Headers/Public/**/*",
          "Classes/**/*.h",
          "Classes/**/*.hpp",
          "Classes/**/*.hxx"
        ]
      )
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "youtube-ios-player-helper_public_hdrs",
  srcs = glob(
    [
      "Classes/**/*.h",
      "Classes/**/*.hpp",
      "Classes/**/*.hxx"
    ]
  ) + [
    ":youtube-ios-player-helper_cxx_public_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "youtube-ios-player-helper_hdrs",
  srcs = select(
    {
      "//conditions:default": glob(
        [
          "pod_support/Headers/Public/**/*"
        ] + glob(
          [
            "Classes/**/*.h",
            "Classes/**/*.hpp",
            "Classes/**/*.hxx"
          ],
          exclude = [
            "Classes/osx/**/*.h",
            "Classes/osx/**/*.hpp",
            "Classes/osx/**/*.hxx"
          ]
        )
      ),
      ":osxCase": glob(
        [
          "pod_support/Headers/Public/**/*"
        ] + glob(
          [
            "Classes/**/*.h",
            "Classes/**/*.hpp",
            "Classes/**/*.hxx"
          ],
          exclude = [
            "Classes/ios/**/*.h",
            "Classes/ios/**/*.hpp",
            "Classes/ios/**/*.hxx"
          ]
        )
      ),
      ":tvosCase": glob(
        [
          "pod_support/Headers/Public/**/*",
          "Classes/**/*.h",
          "Classes/**/*.hpp",
          "Classes/**/*.hxx"
        ]
      ),
      ":watchosCase": glob(
        [
          "pod_support/Headers/Public/**/*",
          "Classes/**/*.h",
          "Classes/**/*.hpp",
          "Classes/**/*.hxx"
        ]
      )
    }
  ) + [
    ":youtube-ios-player-helper_cxx_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "youtube-ios-player-helper_hmap",
  namespace = "youtube-ios-player-helper",
  hdrs = [
    "youtube-ios-player-helper_package_hdrs",
    ":youtube-ios-player-helper_hdrs"
  ],
  deps = [
    ":youtube-ios-player-helper_cxx_hmap"
  ],
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "youtube-ios-player-helper_includes",
  include = [
    "Vendor/youtube-ios-player-helper/pod_support/Headers/Public/"
  ]
)
objc_library(
  name = "youtube-ios-player-helper",
  enable_modules = 0,
  srcs = select(
    {
      "//conditions:default": glob(
        [
          "Classes/**/*.S",
          "Classes/**/*.c",
          "Classes/**/*.m",
          "Classes/**/*.s"
        ],
        exclude = [
          "Classes/osx/**/*.S",
          "Classes/osx/**/*.c",
          "Classes/osx/**/*.cc",
          "Classes/osx/**/*.cpp",
          "Classes/osx/**/*.cxx",
          "Classes/osx/**/*.m",
          "Classes/osx/**/*.mm",
          "Classes/osx/**/*.s"
        ]
      ),
      ":osxCase": glob(
        [
          "Classes/**/*.S",
          "Classes/**/*.c",
          "Classes/**/*.m",
          "Classes/**/*.s"
        ],
        exclude = [
          "Classes/ios/**/*.S",
          "Classes/ios/**/*.c",
          "Classes/ios/**/*.cc",
          "Classes/ios/**/*.cpp",
          "Classes/ios/**/*.cxx",
          "Classes/ios/**/*.m",
          "Classes/ios/**/*.mm",
          "Classes/ios/**/*.s"
        ]
      ),
      ":tvosCase": glob(
        [
          "Classes/**/*.S",
          "Classes/**/*.c",
          "Classes/**/*.m",
          "Classes/**/*.s"
        ]
      ),
      ":watchosCase": glob(
        [
          "Classes/**/*.S",
          "Classes/**/*.c",
          "Classes/**/*.m",
          "Classes/**/*.s"
        ]
      )
    }
  ),
  hdrs = [
    ":youtube-ios-player-helper_hdrs"
  ],
  pch = "pod_support/Headers/Private/youtube-ios-player-helper-prefix.pch",
  deps = [
    ":youtube-ios-player-helper_cxx",
    ":youtube-ios-player-helper_includes"
  ],
  copts = [
    "-fobjc-weak"
  ] + select(
    {
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-IVendor/youtube-ios-player-helper/pod_support/Headers/Public/youtube-ios-player-helper/"
  ],
  data = [
    ":youtube-ios-player-helper_Bundle_Assets"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "youtube-ios-player-helper_acknowledgement",
  deps = [],
  value = "//Vendor/youtube-ios-player-helper/pod_support_buildable:acknowledgement_fragment"
)
apple_bundle_import(
  name = "youtube-ios-player-helper_Bundle_Assets",
  bundle_imports = glob(
    [
      "youtube-ios-player-helper/Assets.bundle/**"
    ]
  )
)
acknowledged_target(
  name = "youtube-ios-player-helper_Bundle_Assets_acknowledgement",
  deps = [],
  value = "//Vendor/youtube-ios-player-helper/pod_support_buildable:acknowledgement_fragment"
)
