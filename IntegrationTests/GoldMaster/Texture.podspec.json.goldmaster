load('//Vendor/rules_pods/BazelExtensions:extensions.bzl', 'pch_with_name_hint')
load('//Vendor/rules_pods/BazelExtensions:extensions.bzl', 'acknowledged_target')
load('//Vendor/rules_pods/BazelExtensions:extensions.bzl', 'gen_module_map')
load('//Vendor/rules_pods/BazelExtensions:extensions.bzl', 'gen_includes')
# Add a config setting release for compilation mode
# Assume that people are using `opt` for release mode
# see the bazel user manual for more information
# https://bazel.build/versions/master/docs/bazel-user-manual.html
native.config_setting(
  name = "release",
  values = {
    "compilation_mode": "opt"
  }
  )
filegroup(
  name = "AsyncDisplayKit_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ],
    exclude_directories = 1
    ),
  visibility = [
    "//visibility:public"
  ]
  )
gen_module_map(
  "AsyncDisplayKit",
  "AsyncDisplayKit_module_map",
  "AsyncDisplayKit",
  [
    "AsyncDisplayKit_hdrs"
  ]
  )
alias(
  name = "Texture",
  actual = "AsyncDisplayKit",
  visibility = [
    "//visibility:public"
  ]
  )
objc_library(
  name = "AsyncDisplayKit",
  enable_modules = 0,
  hdrs = [
    ":AsyncDisplayKit_hdrs"
  ],
  pch = pch_with_name_hint(
    "Texture",
    [

    ]
    ),
  includes = [
    "pod_support/Headers/Public/",
    "AsyncDisplayKit_module_map"
  ],
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":AssetsLibrary",
    ":MapKit",
    ":PINRemoteImage",
    ":Photos"
  ],
  copts = [

  ] + select(
    {
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
    ) + [
    "-IVendor/Texture/pod_support/Headers/Public/AsyncDisplayKit/"
  ] + [
    "-fmodule-name=AsyncDisplayKit_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
  )
acknowledged_target(
  name = "AsyncDisplayKit_acknowledgement",
  deps = [

  ],
  value = "//Vendor/Texture/pod_support_buildable:acknowledgement_fragment"
  )
filegroup(
  name = "Core_cxx_hdrs",
  srcs = glob(
    [
      "Base/*.h",
      "Source/**/*.h",
      "Source/TextKit/*.h"
    ],
    exclude_directories = 1
    ),
  visibility = [
    "//visibility:public"
  ]
  )
objc_library(
  name = "Core_cxx",
  enable_modules = 0,
  srcs = glob(
    [
      "Source/**/*.mm"
    ],
    exclude = [
      "Base/*.m",
      "Source/**/*.m"
    ],
    exclude_directories = 1
    ) + glob(
    [
      "Base/*.h",
      "Source/**/*.h",
      "Source/TextKit/*.h"
    ],
    exclude_directories = 1
    ),
  hdrs = [
    ":AsyncDisplayKit_hdrs"
  ],
  pch = pch_with_name_hint(
    "Texture",
    [
      "Source/**/*.pch"
    ]
    ),
  includes = [
    "pod_support/Headers/Public/",
    "AsyncDisplayKit_module_map"
  ],
  sdk_dylibs = [
    "c++"
  ],
  copts = [
    "-std=c++11",
    "-stdlib=libc++",
    "-fno-exceptions -fno-objc-arc-exceptions"
  ] + select(
    {
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
    ) + [
    "-IVendor/Texture/pod_support/Headers/Public/AsyncDisplayKit/"
  ] + [
    "-fmodule-name=AsyncDisplayKit_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
  )
acknowledged_target(
  name = "Core_cxx_acknowledgement",
  deps = [

  ],
  value = "//Vendor/Texture/pod_support_buildable:acknowledgement_fragment"
  )
filegroup(
  name = "Core_hdrs",
  srcs = glob(
    [
      "Base/*.h",
      "Source/**/*.h",
      "Source/TextKit/*.h"
    ],
    exclude_directories = 1
    ),
  visibility = [
    "//visibility:public"
  ]
  )
objc_library(
  name = "Core",
  enable_modules = 0,
  srcs = glob(
    [
      "Base/*.m",
      "Source/**/*.m"
    ],
    exclude_directories = 1
    ) + glob(
    [
      "Base/*.h",
      "Source/**/*.h",
      "Source/TextKit/*.h"
    ],
    exclude_directories = 1
    ),
  hdrs = [
    ":AsyncDisplayKit_hdrs"
  ],
  pch = pch_with_name_hint(
    "Texture",
    [
      "Base/**/*.pch",
      "Source/**/*.pch"
    ]
    ),
  includes = [
    "pod_support/Headers/Public/",
    "AsyncDisplayKit_module_map"
  ],
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Core_cxx"
  ],
  copts = [
    "-fno-exceptions -fno-objc-arc-exceptions"
  ] + select(
    {
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
    ) + [
    "-IVendor/Texture/pod_support/Headers/Public/AsyncDisplayKit/"
  ] + [
    "-fmodule-name=AsyncDisplayKit_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
  )
acknowledged_target(
  name = "Core_acknowledgement",
  deps = [

  ],
  value = "//Vendor/Texture/pod_support_buildable:acknowledgement_fragment"
  )
filegroup(
  name = "PINRemoteImage_hdrs",
  srcs = [

  ],
  visibility = [
    "//visibility:public"
  ]
  )
objc_library(
  name = "PINRemoteImage",
  enable_modules = 0,
  hdrs = [
    ":AsyncDisplayKit_hdrs"
  ],
  pch = pch_with_name_hint(
    "Texture",
    [

    ]
    ),
  includes = [
    "pod_support/Headers/Public/",
    "AsyncDisplayKit_module_map"
  ],
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    "//Vendor/PINRemoteImage:PINCache",
    "//Vendor/PINRemoteImage:iOS",
    ":Core"
  ],
  copts = [

  ] + select(
    {
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
    ) + [
    "-IVendor/Texture/pod_support/Headers/Public/AsyncDisplayKit/"
  ] + [
    "-fmodule-name=AsyncDisplayKit_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
  )
acknowledged_target(
  name = "PINRemoteImage_acknowledgement",
  deps = [
    "//Vendor/PINRemoteImage:PINCache_acknowledgement",
    "//Vendor/PINRemoteImage:iOS_acknowledgement"
  ],
  value = "//Vendor/Texture/pod_support_buildable:acknowledgement_fragment"
  )
filegroup(
  name = "IGListKit_hdrs",
  srcs = [

  ],
  visibility = [
    "//visibility:public"
  ]
  )
objc_library(
  name = "IGListKit",
  enable_modules = 0,
  hdrs = [
    ":AsyncDisplayKit_hdrs"
  ],
  pch = pch_with_name_hint(
    "Texture",
    [

    ]
    ),
  includes = [
    "pod_support/Headers/Public/",
    "AsyncDisplayKit_module_map"
  ],
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    "//Vendor/IGListKit:IGListKit",
    ":Core"
  ],
  copts = [

  ] + select(
    {
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
    ) + [
    "-IVendor/Texture/pod_support/Headers/Public/AsyncDisplayKit/"
  ] + [
    "-fmodule-name=AsyncDisplayKit_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
  )
acknowledged_target(
  name = "IGListKit_acknowledgement",
  deps = [
    "//Vendor/IGListKit:IGListKit_acknowledgement"
  ],
  value = "//Vendor/Texture/pod_support_buildable:acknowledgement_fragment"
  )
filegroup(
  name = "Yoga_hdrs",
  srcs = [

  ],
  visibility = [
    "//visibility:public"
  ]
  )
objc_library(
  name = "Yoga",
  enable_modules = 0,
  hdrs = [
    ":AsyncDisplayKit_hdrs"
  ],
  pch = pch_with_name_hint(
    "Texture",
    [

    ]
    ),
  includes = [
    "pod_support/Headers/Public/",
    "AsyncDisplayKit_module_map"
  ],
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    "//Vendor/Yoga:Yoga",
    ":Core"
  ],
  copts = [
    "-DYOGA=1"
  ] + select(
    {
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
    ) + [
    "-IVendor/Texture/pod_support/Headers/Public/AsyncDisplayKit/"
  ] + [
    "-fmodule-name=AsyncDisplayKit_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
  )
acknowledged_target(
  name = "Yoga_acknowledgement",
  deps = [
    "//Vendor/Yoga:Yoga_acknowledgement"
  ],
  value = "//Vendor/Texture/pod_support_buildable:acknowledgement_fragment"
  )
filegroup(
  name = "MapKit_hdrs",
  srcs = [

  ],
  visibility = [
    "//visibility:public"
  ]
  )
objc_library(
  name = "MapKit",
  enable_modules = 0,
  hdrs = [
    ":AsyncDisplayKit_hdrs"
  ],
  pch = pch_with_name_hint(
    "Texture",
    [

    ]
    ),
  includes = [
    "pod_support/Headers/Public/",
    "AsyncDisplayKit_module_map"
  ],
  sdk_frameworks = [
    "MapKit"
  ],
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Core"
  ],
  copts = [
    "-DAS_USE_MAPKIT=1"
  ] + select(
    {
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
    ) + [
    "-IVendor/Texture/pod_support/Headers/Public/AsyncDisplayKit/"
  ] + [
    "-fmodule-name=AsyncDisplayKit_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
  )
acknowledged_target(
  name = "MapKit_acknowledgement",
  deps = [

  ],
  value = "//Vendor/Texture/pod_support_buildable:acknowledgement_fragment"
  )
filegroup(
  name = "Photos_hdrs",
  srcs = [

  ],
  visibility = [
    "//visibility:public"
  ]
  )
objc_library(
  name = "Photos",
  enable_modules = 0,
  hdrs = [
    ":AsyncDisplayKit_hdrs"
  ],
  pch = pch_with_name_hint(
    "Texture",
    [

    ]
    ),
  includes = [
    "pod_support/Headers/Public/",
    "AsyncDisplayKit_module_map"
  ],
  sdk_frameworks = [
    "Photos"
  ],
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Core"
  ],
  copts = [
    "-DAS_USE_PHOTOS=1"
  ] + select(
    {
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
    ) + [
    "-IVendor/Texture/pod_support/Headers/Public/AsyncDisplayKit/"
  ] + [
    "-fmodule-name=AsyncDisplayKit_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
  )
acknowledged_target(
  name = "Photos_acknowledgement",
  deps = [

  ],
  value = "//Vendor/Texture/pod_support_buildable:acknowledgement_fragment"
  )
filegroup(
  name = "AssetsLibrary_hdrs",
  srcs = [

  ],
  visibility = [
    "//visibility:public"
  ]
  )
objc_library(
  name = "AssetsLibrary",
  enable_modules = 0,
  hdrs = [
    ":AsyncDisplayKit_hdrs"
  ],
  pch = pch_with_name_hint(
    "Texture",
    [

    ]
    ),
  includes = [
    "pod_support/Headers/Public/",
    "AsyncDisplayKit_module_map"
  ],
  sdk_frameworks = [
    "AssetsLibrary"
  ],
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Core"
  ],
  copts = [
    "-DAS_USE_ASSETS_LIBRARY=1"
  ] + select(
    {
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
    ) + [
    "-IVendor/Texture/pod_support/Headers/Public/AsyncDisplayKit/"
  ] + [
    "-fmodule-name=AsyncDisplayKit_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
  )
acknowledged_target(
  name = "AssetsLibrary_acknowledgement",
  deps = [

  ],
  value = "//Vendor/Texture/pod_support_buildable:acknowledgement_fragment"
  )
