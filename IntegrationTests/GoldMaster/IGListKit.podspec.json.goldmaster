load(
  "//Vendor/rules_pods/BazelExtensions:extensions.bzl",
  "pch_with_name_hint",
  "acknowledged_target",
  "gen_module_map",
  "gen_includes",
  "headermap"
)
# Add a config setting release for compilation mode
# Assume that people are using `opt` for release mode
# see the bazel user manual for more information
# https://docs.bazel.build/versions/master/be/general.html#config_setting
config_setting(
  name = "release",
  values = {
    "compilation_mode": "opt"
  }
)
config_setting(
  name = "osxCase",
  values = {
    "apple_platform_type": "macos"
  }
)
config_setting(
  name = "tvosCase",
  values = {
    "apple_platform_type": "tvos"
  }
)
config_setting(
  name = "watchosCase",
  values = {
    "apple_platform_type": "watchos"
  }
)
filegroup(
  name = "IGListKit_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ],
    exclude_directories = 1
  ) + [
    ":Default_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "IGListKit_hmap",
  namespace = "IGListKit",
  hdrs = [
    ":IGListKit_hdrs"
  ],
  deps = [
    ":Default"
  ],
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "IGListKit_includes",
  include = [
    "Vendor/IGListKit/pod_support/Headers/Public/"
  ]
)
gen_module_map(
  "IGListKit",
  "IGListKit_module_map",
  "IGListKit",
  [
    "IGListKit_hdrs"
  ]
)
objc_library(
  name = "IGListKit",
  enable_modules = 0,
  hdrs = [
    ":IGListKit_hdrs"
  ],
  pch = pch_with_name_hint(
    "IGListKit",
    []
  ),
  sdk_frameworks = select(
    {
      "//conditions:default": [
        "UIKit"
      ],
      ":osxCase": [
        "Cocoa"
      ],
      ":tvosCase": [
        "UIKit"
      ]
    }
  ),
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Default",
    ":IGListKit_includes"
  ],
  copts = select(
    {
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-IVendor/IGListKit/pod_support/Headers/Public/IGListKit/"
  ] + [
    "-fmodule-name=IGListKit_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "IGListKit_acknowledgement",
  deps = [],
  value = "//Vendor/IGListKit/pod_support_buildable:acknowledgement_fragment"
)
filegroup(
  name = "Diffing_cxx_hdrs",
  srcs = glob(
    [
      "Source/Common/**/*.h",
      "Source/Common/Internal/*.h"
    ],
    exclude_directories = 1
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Diffing_cxx_union_hdrs",
  srcs = [
    "Diffing_cxx_hdrs",
    "IGListKit_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "Diffing_cxx_hmap",
  namespace = "IGListKit",
  hdrs = [
    ":Diffing_cxx_union_hdrs"
  ],
  deps = [],
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "Diffing_cxx_includes",
  include = [
    "Vendor/IGListKit/pod_support/Headers/Public/"
  ]
)
objc_library(
  name = "Diffing_cxx",
  enable_modules = 0,
  srcs = glob(
    [
      "Source/Common/**/*.mm"
    ],
    exclude = glob(
      [
        "Source/Common/**/*.m"
      ],
      exclude_directories = 1
    ),
    exclude_directories = 1
  ),
  hdrs = [
    ":Diffing_cxx_union_hdrs"
  ],
  pch = pch_with_name_hint(
    "IGListKit",
    glob(
      [
        "Source/**/*.pch"
      ],
      exclude_directories = 1
    )
  ),
  sdk_frameworks = select(
    {
      "//conditions:default": [
        "UIKit"
      ],
      ":osxCase": [
        "Cocoa"
      ],
      ":tvosCase": [
        "UIKit"
      ]
    }
  ),
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Diffing_cxx_includes"
  ],
  copts = [
    "-std=c++11",
    "-stdlib=libc++"
  ] + select(
    {
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-IVendor/IGListKit/pod_support/Headers/Public/IGListKit/"
  ] + [
    "-fmodule-name=IGListKit_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "Diffing_cxx_acknowledgement",
  deps = [],
  value = "//Vendor/IGListKit/pod_support_buildable:acknowledgement_fragment"
)
filegroup(
  name = "Diffing_hdrs",
  srcs = glob(
    [
      "Source/Common/**/*.h",
      "Source/Common/Internal/*.h"
    ],
    exclude_directories = 1
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Diffing_union_hdrs",
  srcs = [
    "Diffing_hdrs",
    "IGListKit_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "Diffing_hmap",
  namespace = "IGListKit",
  hdrs = [
    ":Diffing_union_hdrs"
  ],
  deps = [
    ":Diffing_cxx"
  ],
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "Diffing_includes",
  include = [
    "Vendor/IGListKit/pod_support/Headers/Public/"
  ]
)
objc_library(
  name = "Diffing",
  enable_modules = 0,
  srcs = select(
    {
      "//conditions:default": glob(
        [
          "Source/Common/**/*.m"
        ],
        exclude = glob(
          [
            "Source/**/*.mm"
          ],
          exclude_directories = 1
        ) + glob(
          [
            "Source/**/*.m"
          ],
          exclude_directories = 1
        ),
        exclude_directories = 1
      ),
      ":osxCase": glob(
        [
          "Source/Common/**/*.m"
        ],
        exclude_directories = 1
      ),
      ":tvosCase": glob(
        [
          "Source/Common/**/*.m"
        ],
        exclude = glob(
          [
            "Source/**/*.mm"
          ],
          exclude_directories = 1
        ) + glob(
          [
            "Source/**/*.m"
          ],
          exclude_directories = 1
        ),
        exclude_directories = 1
      ),
      ":watchosCase": glob(
        [
          "Source/Common/**/*.m"
        ],
        exclude_directories = 1
      )
    }
  ),
  hdrs = [
    ":Diffing_union_hdrs"
  ],
  pch = pch_with_name_hint(
    "IGListKit",
    glob(
      [
        "Source/**/*.pch"
      ],
      exclude_directories = 1
    )
  ),
  sdk_frameworks = select(
    {
      "//conditions:default": [
        "UIKit"
      ],
      ":osxCase": [
        "Cocoa"
      ],
      ":tvosCase": [
        "UIKit"
      ]
    }
  ),
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Diffing_cxx",
    ":Diffing_includes"
  ],
  copts = select(
    {
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-IVendor/IGListKit/pod_support/Headers/Public/IGListKit/"
  ] + [
    "-fmodule-name=IGListKit_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "Diffing_acknowledgement",
  deps = [],
  value = "//Vendor/IGListKit/pod_support_buildable:acknowledgement_fragment"
)
filegroup(
  name = "Default_cxx_hdrs",
  srcs = select(
    {
      "//conditions:default": glob(
        [
          "Source/**/*.h",
          "Source/Common/Internal/*.h",
          "Source/Internal/*.h"
        ],
        exclude_directories = 1
      ),
      ":tvosCase": glob(
        [
          "Source/**/*.h",
          "Source/Common/Internal/*.h",
          "Source/Internal/*.h"
        ],
        exclude_directories = 1
      )
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Default_cxx_union_hdrs",
  srcs = [
    "Default_cxx_hdrs",
    "IGListKit_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "Default_cxx_hmap",
  namespace = "IGListKit",
  hdrs = [
    ":Default_cxx_union_hdrs"
  ],
  deps = [
    ":Diffing"
  ],
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "Default_cxx_includes",
  include = [
    "Vendor/IGListKit/pod_support/Headers/Public/"
  ]
)
objc_library(
  name = "Default_cxx",
  enable_modules = 0,
  srcs = select(
    {
      "//conditions:default": glob(
        [
          "Source/**/*.mm"
        ],
        exclude = glob(
          [
            "Source/**/*.m"
          ],
          exclude_directories = 1
        ),
        exclude_directories = 1
      ),
      ":tvosCase": glob(
        [
          "Source/**/*.mm"
        ],
        exclude = glob(
          [
            "Source/**/*.m"
          ],
          exclude_directories = 1
        ),
        exclude_directories = 1
      )
    }
  ),
  hdrs = [
    ":Default_cxx_union_hdrs"
  ],
  pch = select(
    {
      "//conditions:default": pch_with_name_hint(
        "IGListKit",
        glob(
          [
            "Source/**/*.pch"
          ],
          exclude_directories = 1
        )
      ),
      ":osxCase": pch_with_name_hint(
        "IGListKit",
        []
      ),
      ":tvosCase": pch_with_name_hint(
        "IGListKit",
        glob(
          [
            "Source/**/*.pch"
          ],
          exclude_directories = 1
        )
      ),
      ":watchosCase": pch_with_name_hint(
        "IGListKit",
        []
      )
    }
  ),
  sdk_frameworks = select(
    {
      "//conditions:default": [
        "UIKit"
      ],
      ":osxCase": [
        "Cocoa"
      ],
      ":tvosCase": [
        "UIKit"
      ]
    }
  ),
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Diffing",
    ":Default_cxx_includes"
  ],
  copts = [
    "-std=c++11",
    "-stdlib=libc++"
  ] + select(
    {
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-IVendor/IGListKit/pod_support/Headers/Public/IGListKit/"
  ] + [
    "-fmodule-name=IGListKit_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "Default_cxx_acknowledgement",
  deps = [],
  value = "//Vendor/IGListKit/pod_support_buildable:acknowledgement_fragment"
)
filegroup(
  name = "Default_hdrs",
  srcs = select(
    {
      "//conditions:default": glob(
        [
          "Source/**/*.h",
          "Source/Common/Internal/*.h",
          "Source/Internal/*.h"
        ],
        exclude_directories = 1
      ),
      ":tvosCase": glob(
        [
          "Source/**/*.h",
          "Source/Common/Internal/*.h",
          "Source/Internal/*.h"
        ],
        exclude_directories = 1
      )
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Default_union_hdrs",
  srcs = [
    "Default_hdrs",
    "IGListKit_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "Default_hmap",
  namespace = "IGListKit",
  hdrs = [
    ":Default_union_hdrs"
  ],
  deps = [
    ":Default_cxx",
    ":Diffing"
  ],
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "Default_includes",
  include = [
    "Vendor/IGListKit/pod_support/Headers/Public/"
  ]
)
objc_library(
  name = "Default",
  enable_modules = 0,
  srcs = select(
    {
      "//conditions:default": glob(
        [
          "Source/**/*.m"
        ],
        exclude_directories = 1
      ),
      ":tvosCase": glob(
        [
          "Source/**/*.m"
        ],
        exclude_directories = 1
      )
    }
  ),
  hdrs = [
    ":Default_union_hdrs"
  ],
  pch = select(
    {
      "//conditions:default": pch_with_name_hint(
        "IGListKit",
        glob(
          [
            "Source/**/*.pch"
          ],
          exclude_directories = 1
        )
      ),
      ":osxCase": pch_with_name_hint(
        "IGListKit",
        []
      ),
      ":tvosCase": pch_with_name_hint(
        "IGListKit",
        glob(
          [
            "Source/**/*.pch"
          ],
          exclude_directories = 1
        )
      ),
      ":watchosCase": pch_with_name_hint(
        "IGListKit",
        []
      )
    }
  ),
  sdk_frameworks = select(
    {
      "//conditions:default": [
        "UIKit"
      ],
      ":osxCase": [
        "Cocoa"
      ],
      ":tvosCase": [
        "UIKit"
      ]
    }
  ),
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Default_cxx",
    ":Diffing",
    ":Default_includes"
  ],
  copts = select(
    {
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-IVendor/IGListKit/pod_support/Headers/Public/IGListKit/"
  ] + [
    "-fmodule-name=IGListKit_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "Default_acknowledgement",
  deps = [],
  value = "//Vendor/IGListKit/pod_support_buildable:acknowledgement_fragment"
)
