load('//Vendor/rules_pods/BazelExtensions:extensions.bzl', 'pch_with_name_hint')
load('//Vendor/rules_pods/BazelExtensions:extensions.bzl', 'acknowledged_target')
load('//Vendor/rules_pods/BazelExtensions:extensions.bzl', 'gen_module_map')
# Add a config setting release for compilation mode
# Assume that people are using `opt` for release mode
# see the bazel user manual for more information
# https://bazel.build/versions/master/docs/bazel-user-manual.html
native.config_setting(
  name = "release",
  values = {
    "compilation_mode": "opt"
  }
  )
filegroup(
  name = "React_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ],
    exclude_directories = 1
    ),
  visibility = [
    "//visibility:public"
  ]
  )
gen_module_map(
  "React",
  "React_module_map",
  "React",
  [
    "React_hdrs"
  ]
  )
objc_library(
  name = "React",
  enable_modules = 0,
  hdrs = [
    ":React_hdrs"
  ],
  pch = pch_with_name_hint(
    "React",
    [

    ]
    ),
  includes = [
    "pod_support/Headers/Public/",
    "React_module_map"
  ],
  deps = [
    ":Core"
  ],
  copts = [

  ] + select(
    {
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ],
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ]
    }
    ) + [
    "-IVendor/React/pod_support/Headers/Public/React/"
  ] + [
    "-fmodule-name=React_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
  )
acknowledged_target(
  name = "React_acknowledgement",
  deps = [

  ],
  value = "//Vendor/React/pod_support_buildable:acknowledgement_fragment"
  )
filegroup(
  name = "Core_hdrs",
  srcs = glob(
    [
      "React/**/*.h"
    ],
    exclude = [
      "**/__tests__/*.h",
      "**/__tests__/*.hpp",
      "**/__tests__/*.hxx",
      "IntegrationTests/*.h",
      "IntegrationTests/*.hpp",
      "IntegrationTests/*.hxx"
    ],
    exclude_directories = 1
    ),
  visibility = [
    "//visibility:public"
  ]
  )
objc_library(
  name = "Core",
  enable_modules = 0,
  srcs = glob(
    [
      "React/**/*.c",
      "React/**/*.m"
    ],
    exclude = [
      "**/__tests__/*.S",
      "**/__tests__/*.c",
      "**/__tests__/*.cpp",
      "**/__tests__/*.m",
      "**/__tests__/*.mm",
      "**/__tests__/*.s",
      "IntegrationTests/*.S",
      "IntegrationTests/*.c",
      "IntegrationTests/*.cpp",
      "IntegrationTests/*.m",
      "IntegrationTests/*.mm",
      "IntegrationTests/*.s",
      "Libraries/ART/**/*.m",
      "Libraries/ActionSheetIOS/*.m",
      "Libraries/AdSupport/*.m",
      "Libraries/Geolocation/*.m",
      "Libraries/Image/*.m",
      "Libraries/LinkingIOS/*.m",
      "Libraries/Network/*.m",
      "Libraries/PushNotificationIOS/*.m",
      "Libraries/Settings/*.m",
      "Libraries/Text/*.m",
      "Libraries/Vibration/*.m",
      "Libraries/WebSocket/*.m"
    ],
    exclude_directories = 1
    ) + glob(
    [
      "React/**/*.h"
    ],
    exclude = [
      "**/__tests__/*.h",
      "**/__tests__/*.hpp",
      "**/__tests__/*.hxx",
      "IntegrationTests/*.h",
      "IntegrationTests/*.hpp",
      "IntegrationTests/*.hxx"
    ],
    exclude_directories = 1
    ),
  hdrs = [
    ":React_hdrs"
  ],
  pch = pch_with_name_hint(
    "React",
    [
      "React/**/*.pch"
    ]
    ),
  includes = [
    "pod_support/Headers/Public/",
    "React_module_map"
  ],
  sdk_frameworks = [
    "JavaScriptCore"
  ],
  copts = [

  ] + select(
    {
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ],
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ]
    }
    ) + [
    "-IVendor/React/pod_support/Headers/Public/React/"
  ] + [
    "-fmodule-name=React_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
  )
acknowledged_target(
  name = "Core_acknowledgement",
  deps = [

  ],
  value = "//Vendor/React/pod_support_buildable:acknowledgement_fragment"
  )
filegroup(
  name = "ART_hdrs",
  srcs = glob(
    [
      "Libraries/ART/**/*.h"
    ],
    exclude_directories = 1
    ),
  visibility = [
    "//visibility:public"
  ]
  )
objc_library(
  name = "ART",
  enable_modules = 0,
  srcs = glob(
    [
      "Libraries/ART/**/*.m"
    ],
    exclude_directories = 1
    ) + glob(
    [
      "Libraries/ART/**/*.h"
    ],
    exclude_directories = 1
    ),
  hdrs = [
    ":React_hdrs"
  ],
  pch = pch_with_name_hint(
    "React",
    [
      "Libraries/**/*.pch"
    ]
    ),
  includes = [
    "pod_support/Headers/Public/",
    "React_module_map"
  ],
  deps = [
    ":Core"
  ],
  copts = [

  ] + select(
    {
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ],
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ]
    }
    ) + [
    "-IVendor/React/pod_support/Headers/Public/React/"
  ] + [
    "-fmodule-name=React_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
  )
acknowledged_target(
  name = "ART_acknowledgement",
  deps = [

  ],
  value = "//Vendor/React/pod_support_buildable:acknowledgement_fragment"
  )
filegroup(
  name = "RCTActionSheet_hdrs",
  srcs = glob(
    [
      "Libraries/ActionSheetIOS/*.h"
    ],
    exclude_directories = 1
    ),
  visibility = [
    "//visibility:public"
  ]
  )
objc_library(
  name = "RCTActionSheet",
  enable_modules = 0,
  srcs = glob(
    [
      "Libraries/ActionSheetIOS/*.m"
    ],
    exclude_directories = 1
    ) + glob(
    [
      "Libraries/ActionSheetIOS/*.h"
    ],
    exclude_directories = 1
    ),
  hdrs = [
    ":React_hdrs"
  ],
  pch = pch_with_name_hint(
    "React",
    [
      "Libraries/**/*.pch"
    ]
    ),
  includes = [
    "pod_support/Headers/Public/",
    "React_module_map"
  ],
  deps = [
    ":Core"
  ],
  copts = [

  ] + select(
    {
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ],
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ]
    }
    ) + [
    "-IVendor/React/pod_support/Headers/Public/React/"
  ] + [
    "-fmodule-name=React_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
  )
acknowledged_target(
  name = "RCTActionSheet_acknowledgement",
  deps = [

  ],
  value = "//Vendor/React/pod_support_buildable:acknowledgement_fragment"
  )
filegroup(
  name = "RCTAdSupport_hdrs",
  srcs = glob(
    [
      "Libraries/AdSupport/*.h"
    ],
    exclude_directories = 1
    ),
  visibility = [
    "//visibility:public"
  ]
  )
objc_library(
  name = "RCTAdSupport",
  enable_modules = 0,
  srcs = glob(
    [
      "Libraries/AdSupport/*.m"
    ],
    exclude_directories = 1
    ) + glob(
    [
      "Libraries/AdSupport/*.h"
    ],
    exclude_directories = 1
    ),
  hdrs = [
    ":React_hdrs"
  ],
  pch = pch_with_name_hint(
    "React",
    [
      "Libraries/**/*.pch"
    ]
    ),
  includes = [
    "pod_support/Headers/Public/",
    "React_module_map"
  ],
  deps = [
    ":Core"
  ],
  copts = [

  ] + select(
    {
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ],
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ]
    }
    ) + [
    "-IVendor/React/pod_support/Headers/Public/React/"
  ] + [
    "-fmodule-name=React_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
  )
acknowledged_target(
  name = "RCTAdSupport_acknowledgement",
  deps = [

  ],
  value = "//Vendor/React/pod_support_buildable:acknowledgement_fragment"
  )
filegroup(
  name = "RCTGeolocation_hdrs",
  srcs = glob(
    [
      "Libraries/Geolocation/*.h"
    ],
    exclude_directories = 1
    ),
  visibility = [
    "//visibility:public"
  ]
  )
objc_library(
  name = "RCTGeolocation",
  enable_modules = 0,
  srcs = glob(
    [
      "Libraries/Geolocation/*.m"
    ],
    exclude_directories = 1
    ) + glob(
    [
      "Libraries/Geolocation/*.h"
    ],
    exclude_directories = 1
    ),
  hdrs = [
    ":React_hdrs"
  ],
  pch = pch_with_name_hint(
    "React",
    [
      "Libraries/**/*.pch"
    ]
    ),
  includes = [
    "pod_support/Headers/Public/",
    "React_module_map"
  ],
  deps = [
    ":Core"
  ],
  copts = [

  ] + select(
    {
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ],
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ]
    }
    ) + [
    "-IVendor/React/pod_support/Headers/Public/React/"
  ] + [
    "-fmodule-name=React_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
  )
acknowledged_target(
  name = "RCTGeolocation_acknowledgement",
  deps = [

  ],
  value = "//Vendor/React/pod_support_buildable:acknowledgement_fragment"
  )
filegroup(
  name = "RCTImage_hdrs",
  srcs = glob(
    [
      "Libraries/Image/*.h"
    ],
    exclude_directories = 1
    ),
  visibility = [
    "//visibility:public"
  ]
  )
objc_library(
  name = "RCTImage",
  enable_modules = 0,
  srcs = glob(
    [
      "Libraries/Image/*.m"
    ],
    exclude_directories = 1
    ) + glob(
    [
      "Libraries/Image/*.h"
    ],
    exclude_directories = 1
    ),
  hdrs = [
    ":React_hdrs"
  ],
  pch = pch_with_name_hint(
    "React",
    [
      "Libraries/**/*.pch"
    ]
    ),
  includes = [
    "pod_support/Headers/Public/",
    "React_module_map"
  ],
  deps = [
    ":Core"
  ],
  copts = [

  ] + select(
    {
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ],
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ]
    }
    ) + [
    "-IVendor/React/pod_support/Headers/Public/React/"
  ] + [
    "-fmodule-name=React_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
  )
acknowledged_target(
  name = "RCTImage_acknowledgement",
  deps = [

  ],
  value = "//Vendor/React/pod_support_buildable:acknowledgement_fragment"
  )
filegroup(
  name = "RCTNetwork_hdrs",
  srcs = glob(
    [
      "Libraries/Network/*.h"
    ],
    exclude_directories = 1
    ),
  visibility = [
    "//visibility:public"
  ]
  )
objc_library(
  name = "RCTNetwork",
  enable_modules = 0,
  srcs = glob(
    [
      "Libraries/Network/*.m"
    ],
    exclude_directories = 1
    ) + glob(
    [
      "Libraries/Network/*.h"
    ],
    exclude_directories = 1
    ),
  hdrs = [
    ":React_hdrs"
  ],
  pch = pch_with_name_hint(
    "React",
    [
      "Libraries/**/*.pch"
    ]
    ),
  includes = [
    "pod_support/Headers/Public/",
    "React_module_map"
  ],
  deps = [
    ":Core"
  ],
  copts = [

  ] + select(
    {
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ],
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ]
    }
    ) + [
    "-IVendor/React/pod_support/Headers/Public/React/"
  ] + [
    "-fmodule-name=React_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
  )
acknowledged_target(
  name = "RCTNetwork_acknowledgement",
  deps = [

  ],
  value = "//Vendor/React/pod_support_buildable:acknowledgement_fragment"
  )
filegroup(
  name = "RCTPushNotification_hdrs",
  srcs = glob(
    [
      "Libraries/PushNotificationIOS/*.h"
    ],
    exclude_directories = 1
    ),
  visibility = [
    "//visibility:public"
  ]
  )
objc_library(
  name = "RCTPushNotification",
  enable_modules = 0,
  srcs = glob(
    [
      "Libraries/PushNotificationIOS/*.m"
    ],
    exclude_directories = 1
    ) + glob(
    [
      "Libraries/PushNotificationIOS/*.h"
    ],
    exclude_directories = 1
    ),
  hdrs = [
    ":React_hdrs"
  ],
  pch = pch_with_name_hint(
    "React",
    [
      "Libraries/**/*.pch"
    ]
    ),
  includes = [
    "pod_support/Headers/Public/",
    "React_module_map"
  ],
  deps = [
    ":Core"
  ],
  copts = [

  ] + select(
    {
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ],
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ]
    }
    ) + [
    "-IVendor/React/pod_support/Headers/Public/React/"
  ] + [
    "-fmodule-name=React_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
  )
acknowledged_target(
  name = "RCTPushNotification_acknowledgement",
  deps = [

  ],
  value = "//Vendor/React/pod_support_buildable:acknowledgement_fragment"
  )
filegroup(
  name = "RCTSettings_hdrs",
  srcs = glob(
    [
      "Libraries/Settings/*.h"
    ],
    exclude_directories = 1
    ),
  visibility = [
    "//visibility:public"
  ]
  )
objc_library(
  name = "RCTSettings",
  enable_modules = 0,
  srcs = glob(
    [
      "Libraries/Settings/*.m"
    ],
    exclude_directories = 1
    ) + glob(
    [
      "Libraries/Settings/*.h"
    ],
    exclude_directories = 1
    ),
  hdrs = [
    ":React_hdrs"
  ],
  pch = pch_with_name_hint(
    "React",
    [
      "Libraries/**/*.pch"
    ]
    ),
  includes = [
    "pod_support/Headers/Public/",
    "React_module_map"
  ],
  deps = [
    ":Core"
  ],
  copts = [

  ] + select(
    {
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ],
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ]
    }
    ) + [
    "-IVendor/React/pod_support/Headers/Public/React/"
  ] + [
    "-fmodule-name=React_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
  )
acknowledged_target(
  name = "RCTSettings_acknowledgement",
  deps = [

  ],
  value = "//Vendor/React/pod_support_buildable:acknowledgement_fragment"
  )
filegroup(
  name = "RCTText_hdrs",
  srcs = glob(
    [
      "Libraries/Text/*.h"
    ],
    exclude_directories = 1
    ),
  visibility = [
    "//visibility:public"
  ]
  )
objc_library(
  name = "RCTText",
  enable_modules = 0,
  srcs = glob(
    [
      "Libraries/Text/*.m"
    ],
    exclude_directories = 1
    ) + glob(
    [
      "Libraries/Text/*.h"
    ],
    exclude_directories = 1
    ),
  hdrs = [
    ":React_hdrs"
  ],
  pch = pch_with_name_hint(
    "React",
    [
      "Libraries/**/*.pch"
    ]
    ),
  includes = [
    "pod_support/Headers/Public/",
    "React_module_map"
  ],
  deps = [
    ":Core"
  ],
  copts = [

  ] + select(
    {
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ],
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ]
    }
    ) + [
    "-IVendor/React/pod_support/Headers/Public/React/"
  ] + [
    "-fmodule-name=React_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
  )
acknowledged_target(
  name = "RCTText_acknowledgement",
  deps = [

  ],
  value = "//Vendor/React/pod_support_buildable:acknowledgement_fragment"
  )
filegroup(
  name = "RCTVibration_hdrs",
  srcs = glob(
    [
      "Libraries/Vibration/*.h"
    ],
    exclude_directories = 1
    ),
  visibility = [
    "//visibility:public"
  ]
  )
objc_library(
  name = "RCTVibration",
  enable_modules = 0,
  srcs = glob(
    [
      "Libraries/Vibration/*.m"
    ],
    exclude_directories = 1
    ) + glob(
    [
      "Libraries/Vibration/*.h"
    ],
    exclude_directories = 1
    ),
  hdrs = [
    ":React_hdrs"
  ],
  pch = pch_with_name_hint(
    "React",
    [
      "Libraries/**/*.pch"
    ]
    ),
  includes = [
    "pod_support/Headers/Public/",
    "React_module_map"
  ],
  deps = [
    ":Core"
  ],
  copts = [

  ] + select(
    {
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ],
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ]
    }
    ) + [
    "-IVendor/React/pod_support/Headers/Public/React/"
  ] + [
    "-fmodule-name=React_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
  )
acknowledged_target(
  name = "RCTVibration_acknowledgement",
  deps = [

  ],
  value = "//Vendor/React/pod_support_buildable:acknowledgement_fragment"
  )
filegroup(
  name = "RCTWebSocket_hdrs",
  srcs = glob(
    [
      "Libraries/WebSocket/*.h"
    ],
    exclude_directories = 1
    ),
  visibility = [
    "//visibility:public"
  ]
  )
objc_library(
  name = "RCTWebSocket",
  enable_modules = 0,
  srcs = glob(
    [
      "Libraries/WebSocket/*.m"
    ],
    exclude_directories = 1
    ) + glob(
    [
      "Libraries/WebSocket/*.h"
    ],
    exclude_directories = 1
    ),
  hdrs = [
    ":React_hdrs"
  ],
  pch = pch_with_name_hint(
    "React",
    [
      "Libraries/**/*.pch"
    ]
    ),
  includes = [
    "pod_support/Headers/Public/",
    "React_module_map"
  ],
  deps = [
    ":Core"
  ],
  copts = [

  ] + select(
    {
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ],
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ]
    }
    ) + [
    "-IVendor/React/pod_support/Headers/Public/React/"
  ] + [
    "-fmodule-name=React_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
  )
acknowledged_target(
  name = "RCTWebSocket_acknowledgement",
  deps = [

  ],
  value = "//Vendor/React/pod_support_buildable:acknowledgement_fragment"
  )
filegroup(
  name = "RCTLinkingIOS_hdrs",
  srcs = glob(
    [
      "Libraries/LinkingIOS/*.h"
    ],
    exclude_directories = 1
    ),
  visibility = [
    "//visibility:public"
  ]
  )
objc_library(
  name = "RCTLinkingIOS",
  enable_modules = 0,
  srcs = glob(
    [
      "Libraries/LinkingIOS/*.m"
    ],
    exclude_directories = 1
    ) + glob(
    [
      "Libraries/LinkingIOS/*.h"
    ],
    exclude_directories = 1
    ),
  hdrs = [
    ":React_hdrs"
  ],
  pch = pch_with_name_hint(
    "React",
    [
      "Libraries/**/*.pch"
    ]
    ),
  includes = [
    "pod_support/Headers/Public/",
    "React_module_map"
  ],
  deps = [
    ":Core"
  ],
  copts = [

  ] + select(
    {
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ],
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ]
    }
    ) + [
    "-IVendor/React/pod_support/Headers/Public/React/"
  ] + [
    "-fmodule-name=React_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
  )
acknowledged_target(
  name = "RCTLinkingIOS_acknowledgement",
  deps = [

  ],
  value = "//Vendor/React/pod_support_buildable:acknowledgement_fragment"
  )
