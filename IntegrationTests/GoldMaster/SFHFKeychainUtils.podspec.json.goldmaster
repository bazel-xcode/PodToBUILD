load('@build_bazel_rules_swift//swift:swift.bzl', 'swift_library')
load(
  "//Vendor/rules_pods/BazelExtensions:extensions.bzl",
  "pch_with_name_hint",
  "acknowledged_target",
  "gen_module_map",
  "gen_includes",
  "headermap"
)
# Add a config setting release for compilation mode
# Assume that people are using `opt` for release mode
# see the bazel user manual for more information
# https://docs.bazel.build/versions/master/be/general.html#config_setting
config_setting(
  name = "release",
  values = {
    "compilation_mode": "opt"
  }
)
filegroup(
  name = "SFHFKeychainUtils_cxx_hdrs",
  srcs = glob(
    [
      "security/**/*.h",
      "security/**/*.hpp",
      "security/**/*.hxx"
    ],
    exclude_directories = 1
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "SFHFKeychainUtils_cxx_union_hdrs",
  srcs = [
    "SFHFKeychainUtils_cxx_hdrs",
    "SFHFKeychainUtils_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "SFHFKeychainUtils_cxx_hmap",
  namespace = "SFHFKeychainUtils",
  hdrs = [
    ":SFHFKeychainUtils_cxx_union_hdrs"
  ],
  deps = [],
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "SFHFKeychainUtils_cxx_includes",
  include = [
    "Vendor/SFHFKeychainUtils/pod_support/Headers/Public/"
  ]
)
objc_library(
  name = "SFHFKeychainUtils_cxx",
  enable_modules = 0,
  srcs = glob(
    [
      "security/**/*.cc",
      "security/**/*.cpp",
      "security/**/*.cxx"
    ],
    exclude = [
      "security/**/*.S",
      "security/**/*.c",
      "security/**/*.m",
      "security/**/*.s"
    ],
    exclude_directories = 1
  ),
  non_arc_srcs = glob(
    [
      "security/**/*.mm"
    ],
    exclude = [
      "security/**/*.m"
    ],
    exclude_directories = 1
  ),
  hdrs = [
    ":SFHFKeychainUtils_cxx_union_hdrs"
  ],
  pch = pch_with_name_hint(
    "SFHFKeychainUtils",
    [
      "security/**/*.pch"
    ]
  ),
  sdk_frameworks = [
    "Security"
  ],
  deps = [
    ":SFHFKeychainUtils_cxx_includes"
  ],
  copts = select(
    {
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-IVendor/SFHFKeychainUtils/pod_support/Headers/Public/SFHFKeychainUtils/"
  ] + [
    "-fmodule-name=SFHFKeychainUtils_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "SFHFKeychainUtils_cxx_acknowledgement",
  deps = [],
  value = "//Vendor/SFHFKeychainUtils/pod_support_buildable:acknowledgement_fragment"
)
swift_library(
  name = "SFHFKeychainUtils_swift",
  srcs = glob(
    [
      "security/**/*.swift"
    ],
    exclude_directories = 1
  ),
  deps = [],
  data = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "SFHFKeychainUtils_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ],
    exclude_directories = 1
  ) + glob(
    [
      "security/**/*.h",
      "security/**/*.hpp",
      "security/**/*.hxx"
    ],
    exclude_directories = 1
  ) + [
    ":SFHFKeychainUtils_cxx_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "SFHFKeychainUtils_hmap",
  namespace = "SFHFKeychainUtils",
  hdrs = [
    ":SFHFKeychainUtils_hdrs"
  ],
  deps = [
    ":SFHFKeychainUtils_cxx",
    ":SFHFKeychainUtils_swift"
  ],
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "SFHFKeychainUtils_includes",
  include = [
    "Vendor/SFHFKeychainUtils/pod_support/Headers/Public/"
  ]
)
gen_module_map(
  "SFHFKeychainUtils",
  "SFHFKeychainUtils_module_map",
  "SFHFKeychainUtils",
  [
    "SFHFKeychainUtils_hdrs"
  ]
)
objc_library(
  name = "SFHFKeychainUtils",
  enable_modules = 0,
  srcs = glob(
    [
      "security/**/*.S",
      "security/**/*.c",
      "security/**/*.s"
    ],
    exclude_directories = 1
  ),
  non_arc_srcs = glob(
    [
      "security/**/*.m"
    ],
    exclude_directories = 1
  ),
  hdrs = [
    ":SFHFKeychainUtils_hdrs"
  ],
  pch = pch_with_name_hint(
    "SFHFKeychainUtils",
    [
      "security/**/*.pch"
    ]
  ),
  sdk_frameworks = [
    "Security"
  ],
  deps = [
    ":SFHFKeychainUtils_cxx",
    ":SFHFKeychainUtils_swift",
    ":SFHFKeychainUtils_includes"
  ],
  copts = select(
    {
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-IVendor/SFHFKeychainUtils/pod_support/Headers/Public/SFHFKeychainUtils/"
  ] + [
    "-fmodule-name=SFHFKeychainUtils_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "SFHFKeychainUtils_acknowledgement",
  deps = [],
  value = "//Vendor/SFHFKeychainUtils/pod_support_buildable:acknowledgement_fragment"
)
