load(
  "//Vendor/rules_pods/BazelExtensions:extensions.bzl",
  "pch_with_name_hint",
  "acknowledged_target",
  "gen_module_map",
  "gen_includes",
  "headermap"
)
# Add a config setting release for compilation mode
# Assume that people are using `opt` for release mode
# see the bazel user manual for more information
# https://docs.bazel.build/versions/master/be/general.html#config_setting
config_setting(
  name = "release",
  values = {
    "compilation_mode": "opt"
  }
)
config_setting(
  name = "osxCase",
  values = {
    "apple_platform_type": "macos"
  }
)
config_setting(
  name = "tvosCase",
  values = {
    "apple_platform_type": "tvos"
  }
)
config_setting(
  name = "watchosCase",
  values = {
    "apple_platform_type": "watchos"
  }
)
filegroup(
  name = "glog_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ],
    exclude_directories = 1
  ) + glob(
    [
      "glog/**/*.h",
      "glog/**/*.hpp",
      "glog/**/*.hxx",
      "src/*.h",
      "src/base/*.h",
      "src/glog/*.h"
    ],
    exclude = [
      "src/windows/**/*.h",
      "src/windows/**/*.hpp",
      "src/windows/**/*.hxx"
    ],
    exclude_directories = 1
  ),
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "glog_hmap",
  namespace = "glog",
  hdrs = [
    ":glog_hdrs"
  ],
  deps = [],
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "glog_includes",
  include = [
    "Vendor/glog/src"
  ]
)
gen_module_map(
  "glog",
  "glog_module_map",
  "glog",
  [
    "glog_hdrs"
  ]
)
objc_library(
  name = "glog",
  enable_modules = 0,
  srcs = glob(
    [
      "src/demangle.cc",
      "src/logging.cc",
      "src/raw_logging.cc",
      "src/signalhandler.cc",
      "src/symbolize.cc",
      "src/utilities.cc",
      "src/vlog_is_on.cc"
    ],
    exclude = [
      "src/windows/**/*.S",
      "src/windows/**/*.c",
      "src/windows/**/*.cc",
      "src/windows/**/*.cpp",
      "src/windows/**/*.cxx",
      "src/windows/**/*.m",
      "src/windows/**/*.mm",
      "src/windows/**/*.s"
    ],
    exclude_directories = 1
  ),
  hdrs = [
    ":glog_hdrs"
  ],
  pch = pch_with_name_hint(
    "glog",
    glob(
      [
        "src/**/*.pch"
      ],
      exclude_directories = 1
    )
  ),
  sdk_dylibs = [
    "stdc++"
  ],
  deps = [
    ":glog_includes"
  ],
  copts = select(
    {
      "//conditions:default": [
        "-DPOD_CONFIGURATION_RELEASE=0"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-fmodule-name=glog_pod_module"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "glog_acknowledgement",
  deps = [],
  value = "//Vendor/glog/pod_support_buildable:acknowledgement_fragment"
)
